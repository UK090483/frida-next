{"version":3,"sources":["webpack://_N_E/./components/Card.tsx","webpack://_N_E/./components/Carousel.tsx","webpack://_N_E/./components/Filter/Dropdown.tsx","webpack://_N_E/./components/Filter/Filter.tsx","webpack://_N_E/./lib/animate.js","webpack://_N_E/./components/Forms/NewsletterForm.tsx","webpack://_N_E/./components/Frida.tsx","webpack://_N_E/./components/Gallery/grid.tsx","webpack://_N_E/./components/Gallery/Gallery.tsx","webpack://_N_E/./components/Icon.tsx","webpack://_N_E/./components/ProductComponents/ProductName.tsx","webpack://_N_E/./components/Section.tsx","webpack://_N_E/./components/buttons/bigButton.tsx","webpack://_N_E/./components/buttons/button.tsx","webpack://_N_E/./components/fridaImage/FridaImage.tsx","webpack://_N_E/./components/generic/Mouse/classNames.tsx","webpack://_N_E/./components/generic/Mouse/mouseRemote.tsx","webpack://_N_E/./components/generic/LangSwitcher.tsx","webpack://_N_E/./components/helper/useBodyScrollStop.tsx","webpack://_N_E/./components/generic/nav/BigButtons.tsx","webpack://_N_E/./components/generic/nav/Burger.tsx","webpack://_N_E/./components/generic/nav/Links.tsx","webpack://_N_E/./components/generic/nav/Nav.tsx","webpack://_N_E/./components/helper/ConditionalWraper.tsx","webpack://_N_E/./components/generic/header/pageTitle.tsx","webpack://_N_E/./components/generic/header/Header.tsx","webpack://_N_E/./components/generic/Footer/footer.tsx","webpack://_N_E/./components/generic/Mouse/mouse.tsx","webpack://_N_E/./lib/useSeo.tsx","webpack://_N_E/./components/generic/seo.tsx","webpack://_N_E/./components/generic/layout/layout.tsx","webpack://_N_E/./components/helper/buildInternalLink.tsx","webpack://_N_E/./components/photo.tsx","webpack://_N_E/./contentTypes/Artwork/banner.tsx","webpack://_N_E/./contentTypes/Artwork/ArtworkCard.tsx","webpack://_N_E/./lib/api.tsx","webpack://_N_E/./lib/shopify.js","webpack://_N_E/./lib/context.js","webpack://_N_E/./lib/helpers.tsx","webpack://_N_E/./lib/modalContext.tsx","webpack://_N_E/./lib/queries/snippets.tsx","webpack://_N_E/./lib/sanity.tsx","webpack://_N_E/./contentTypes/Artist/ArtistCard.tsx","webpack://_N_E/./contentTypes/Artist/ArtistGallery.tsx","webpack://_N_E/./pageBuilder/Blocks/ArtistsBlock.tsx","webpack://_N_E/./contentTypes/Artwork/ArtworkGallery.tsx","webpack://_N_E/./pageBuilder/Blocks/ArtworkBlock.tsx","webpack://_N_E/./components/CarussellHero/HeroNav.tsx","webpack://_N_E/./components/CarussellHero/CarouselItem.tsx","webpack://_N_E/./components/CarussellHero/ButtonNav.tsx","webpack://_N_E/./components/CarussellHero/CarussellHero.tsx","webpack://_N_E/./pageBuilder/Blocks/CarouselHeroBlock.tsx","webpack://_N_E/./components/Category.tsx","webpack://_N_E/./pageBuilder/Blocks/CategoryBlock.tsx","webpack://_N_E/./components/marquee.tsx","webpack://_N_E/./pageBuilder/Blocks/Marquee.tsx","webpack://_N_E/./contentTypes/Post/PostCard.tsx","webpack://_N_E/./contentTypes/Post/PostGallery.tsx","webpack://_N_E/./pageBuilder/Blocks/PostsBlock.tsx","webpack://_N_E/./contentTypes/Product/ProductCard.tsx","webpack://_N_E/./contentTypes/Product/ProductGallery.tsx","webpack://_N_E/./pageBuilder/Blocks/ProductsBlock.tsx","webpack://_N_E/./pageBuilder/Blocks/SectionBlock.tsx","webpack://_N_E/./pageBuilder/component_not_found.tsx","webpack://_N_E/./pageBuilder/Components.tsx","webpack://_N_E/./pageBuilder/BodyParser.tsx","webpack://_N_E/./pageBuilder/Plugs/ButtonPlug.tsx","webpack://_N_E/./components/Embed.tsx","webpack://_N_E/./pageBuilder/Plugs/EmbedPlug.tsx","webpack://_N_E/./pageBuilder/Plugs/ImagePlug.tsx","webpack://_N_E/./pageBuilder/RichText.tsx"],"names":["props","slug","isSwiping","children","type","photo","galleryType","layout","title","modal","alt","useModalContext","pushAsModal","saveScroll","router","useRouter","isCarousel","isGrid","isMasonry","href","passHref","draggable","mouseLinkProps","className","classNames","onClick","e","preventDefault","asPath","push","ARTWORK_IMAGE_PROPS","text","textColor","defaultResponsive","xxl","breakpoint","max","min","items","partialVisibilityGutter","xl","lg","md","sm","xs","responsive","bgColor","header","React","setState","swiping","setSwiping","carousel","backgroundColor","deviceType","ssr","beforeChange","number","afterChange","partialVisible","ref","infinite","customRightArrow","customLeftArrow","showDots","itemClass","map","item","index","key","CustomArrow","current","next","icon","label","length","name","value","filter","query","handleQueries","q","queryString","Object","entries","reduce","acc","undefined","shallow","getLabel","active","Icon","size","_filter","fadeAnim","show","opacity","transition","duration","delay","ease","when","hide","locale","yourEmail","registerNow","send","useState","email","state","verified","isSubmitting","success","errors","hasError","onSubmit","verifyMail","os","setTimeout","AnimatePresence","exitBeforeEnter","m","initial","animate","exit","variants","autoComplete","aria-hidden","htmlFor","cx","hidden","id","inputMode","onChange","setEmail","target","role","disabled","width","height","src","mail","test","String","toLowerCase","color","style","textDecorationThickness","breakpointCols","default","1160","820","columnClassName","page","setPage","hasNextPage","gridRef","intersecting","useIntersection","showScrollUp","boundingClientRect","top","useInfiniteScroll","loading","onLoadMore","rootMargin","sentryRef","slice","window","scrollTo","offsetTop","behavior","Icons","facebook","FaFacebook","whatsApp","FaWhatsapp","twitter","FaTwitter","MailIcon","share","ShareIcon","creditCard","GoCreditCard","menu","MenuIcon","arrowLeft","ArrowNarrowLeftIcon","arrowRight","ArrowNarrowRightIcon","x","XIcon","cart","ShoppingCartIcon","rest","availability","truncate","stringArray","split","firstWord","shift","join","classnames","bgImage","onMouseOver","setMouse","data-color","BigButton","link","rel","extraClasses","position","cursor","imgStyle","sanityAssetId","srcSizes","shopifyImages","layoutId","quality","mouseDown","mouseOut","linkHover","black","mouseNeeded","throttle","fn","lastCall","mouse","now","Date","getTime","throttled","left","pageX","pageY","FridaMouse","document","querySelector","classList","add","initMouse","MouseClassNames","remove","onMouseEnter","onMouseLeave","noScrollClass","useBodyScrollStop","bodyRef","useRef","useEffect","stopBodyScroll","body","overflow","enableBodyScroll","open","bottom","aria-haspopup","aria-controls","Links","lang","toggleNav","useToggleMegaNav","closed","staggerChildren","route","label_en","internalLink","isOpen","useSiteContext","meganav","toggleCard","useToggleCart","handleMenu","Burger","pointerEvents","condition","wrapperTrue","wrapperFalse","getColor","initialColor","observers","bgCurrent","setBgCurrent","counter","setCounter","observerCallback","isIntersecting","getAttribute","querySelectorAll","forEach","i","observer","IntersectionObserver","root","threshold","observe","disconnect","timeOut","clearTimeout","Frida","nav","navItems","Section","padding","setMove","MouseRef","setMouseDown","setMouseUp","setMouseIn","setMouseOut","addEventListener","removeEventListener","defaultSeo","imageBuilder","metaTitle","metaDesc","shareTitle","shareDesc","shareGraphic","siteTitle","url","docSeo","seo","shareGraphicSrc","getImageSrc","cShareGraphicSrc","_type","cDescription","artworkName","cShareTitle","artistName","cMetaTitle","getDefined","getFittedImageSrc","image","IB","asset","fit","ignoreImageParams","bg","pad","args","site","generateSeo","charSet","httpEquiv","content","property","enter","data","schema","Header","footer","BodyParser","buildInternalLink","imageCache","create","getSize","sizes","hasPlaceholder","forceLoad","onLoad","imageRef","isLoaded","setIsLoaded","once","cacheKey","JSON","stringify","getImageCacheKey","aspect","customRatio","aspectRatio","aspectCustom","paddingTop","buildSrc","srcset","buildSrcSet","objectPosition","hotspot","y","srcSet","decoding","activateCacheForImage","requestAnimationFrame","altText","lqip","speed","direction","pauseOnHover","artworkCardQuery","imageMeta","banner","price","Card","ProductName","ptContent","product","blocks","options","domain","process","storefrontAccessToken","Client","initialContext","activeID","productCounts","shopifyClient","shopify","isLoading","isAdding","isUpdating","isCartOpen","checkout","lineItems","SiteContext","createContext","context","setContext","createNewCheckout","fetchCheckout","fetch","fetchVariant","getSanityClient","variant","shopifyCheckoutID","shopifyVariantGID","setCheckoutState","openCart","localStorage","setItem","Promise","all","enc","Base64","variantID","decode","quantity","lineID","prevState","subTotal","lineItemsSubtotalPrice","webUrl","SiteContextProvider","initContext","setInitContext","existingCheckoutID","getItem","existingCheckout","some","lineItem","Error","completedAt","newCheckout","initializeCheckout","Provider","useContext","useCartCount","count","total","useCartTotals","amount","useCartItems","useUpdateItem","itemID","updateLineItems","useRemoveItem","removeLineItems","useCheckout","useHasMounted","hasMounted","setHasMounted","ConditionalWrapper","wrapper","hasObject","recs","vals","obj","clampRange","centsToPrice","cents","trailing","parts","toFixed","replace","toString","isBrowser","format","imgSrc","Math","round","auto","CONFIG_BUILD_ID","fetcher","then","res","json","path","closeModal","firstPageData","secondPageData","ModalContext","initialContextState","closeToSlug","savedScroll","savedPath","ModalContextProvider","firstData","useSWR","oldState","pageProps","secondData","handleRouteChange","events","on","off","secondPageIn","dir","firstPageIn","oS","scrollY","dataset","projectId","useCdn","apiVersion","sanityClient","createSanityClient","sanityImage","usePreviewSubscription","createPreviewSubscriptionHook","preview","token","artistCardQuery","stile","stil","Set","Filter","s","Gallery","artist","includes","artistsBlockQuery","_label","Carousel","medium","artists","artwork","range","parseInt","ArtworkCard","artworksBlockQuery","setValue","_","NavigationItem","num","CarouselItem","setNext","setPrev","hasMultiple","goToSlide","interval","setInterval","clearInterval","mobile","carouselHeroBlockQuery","richTextQuery","carouselHeroItems","content_en","FridaImage","sizeMobile","urlParams","images","categoryItem","categoriesBlockQuery","_items","reverse","pauseable","bgColorHover","colorHover","marqueeRef","gradient","text_en","flex","MarqueeBlockQuery","postCardQuery","previewImage","title_en","excerpt","excerpt_en","categories","categories_en","createdAt","_title","_categories","Infos","cat","formatDate","date","_date","d","Intl","DateTimeFormat","postsBlockQuery","productCardQuery","listingPhotos","listingPhoto","transform","productsBlockQuery","sectionBlockQuery","bottomSpace","topSpace","_content","ComponentList","marquee","Marquee","embed","EmbedPlug","products","ProductsBlock","CategoryBlock","artworks","ArtworksBlock","section","button","ButtonPlug","richText","RT","block","ArtistBlock","posts","PostBlock","carouselHero","CarouselHeroBlock","imagePlug","ImagePlug","ComponentNotFound","blok","Components","_key","buttonPlugQuery","_link","frameBorder","allow","allowFullScreen","embedPlugQuery","imagePlugQuery","sizeToWidth","l","customWidth","customHeight","classes","normal","serializer","types","node","BlockContent","marks","pink","white","frida","mark","isBlock","serializers"],"mappings":"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","file":"static/chunks/623-134d41f595f8dcbefda6.js","sourcesContent":["import Frida from '@components/Frida'\nimport FridaImage, {\n  ARTWORK_IMAGE_PROPS,\n} from '@components/fridaImage/FridaImage'\nimport { mouseLinkProps } from '@components/generic/Mouse/mouseRemote'\nimport { useModalContext } from '@lib/modalContext'\nimport { ImageMetaResult } from '@lib/queries/snippets'\nimport Link from 'next/link'\nimport router, { useRouter } from 'next/router'\nimport React from 'react'\nimport classNames from 'classnames'\nimport { GalleryTypes } from 'types'\n\ninterface CardWrapPros {\n  galleryType: GalleryTypes\n  isSwiping?: boolean\n  slug: string\n  layout?: 'contain' | 'fill'\n  type: 'artwork' | 'artist' | 'post' | 'product'\n  photo: ImageMetaResult | null\n  title?: string\n  modal?: boolean\n  alt?: string\n}\n\nconst CardWrap: React.FC<CardWrapPros> = (props) => {\n  const {\n    slug,\n    isSwiping,\n    children,\n    type,\n    photo,\n    galleryType,\n    layout = 'contain',\n    title,\n    modal = false,\n    alt,\n  } = props\n\n  const { pushAsModal, saveScroll } = useModalContext()\n  const router = useRouter()\n\n  const isCarousel = galleryType === 'carousel'\n  const isGrid = galleryType === 'grid'\n  const isMasonry = galleryType === 'masonry'\n\n  return (\n    <Link href={`/${type}/${slug}`} passHref>\n      <a\n        draggable={false}\n        {...mouseLinkProps}\n        className={classNames(\n          `block mx-auto w-full max-w-sm  bg-frida-white`,\n          { 'mb-10': isGrid || isMasonry },\n          {\n            'p-4 transform scale-75 lg:scale-100 ': isCarousel,\n          }\n        )}\n        onClick={(e) => {\n          e.preventDefault()\n\n          if (modal) {\n            !isSwiping && pushAsModal(`/${type}/${slug}`, type)\n          } else {\n            saveScroll(router.asPath)\n            router.push(`/${type}/${slug}`)\n          }\n        }}\n      >\n        <FridaImage\n          {...ARTWORK_IMAGE_PROPS}\n          photo={photo}\n          className={isCarousel ? 'aspect-w-9 aspect-h-12' : `w-full`}\n          layout={isCarousel ? layout : 'intrinsic'}\n          alt={alt}\n        />\n        {title && (\n          <div\n            // className={` h-8  ${\n            //   artistName && artistName.length > 18 ? 'text-xxs-fluid' : 'text-xl'\n            // } font-bold mt-3`}\n\n            className={` h-8 text-sm-fluid font-bold mt-4`}\n          >\n            <Frida text={title} textColor={'pink'}></Frida>\n          </div>\n        )}\n        {children}\n      </a>\n    </Link>\n  )\n}\n\nexport default CardWrap\n","import { ArrowRightIcon } from '@heroicons/react/solid'\nimport * as React from 'react'\nimport _Carousel, { ResponsiveType } from 'react-multi-carousel'\nimport 'react-multi-carousel/lib/styles.css'\nimport { FridaColors } from 'types'\nimport Section from './Section'\nimport { mouseLinkProps } from './generic/Mouse/mouseRemote'\nimport Icon from './Icon'\n\ntype CarouselProps = {\n  items: React.ReactElement[]\n  responsive?: ResponsiveType\n  bgColor?: FridaColors\n  header?: string | null\n}\nconst defaultResponsive: ResponsiveType = {\n  xxl: {\n    breakpoint: { max: 3300, min: 2040 },\n    items: 3,\n    partialVisibilityGutter: 40,\n  },\n  xl: {\n    breakpoint: { max: 2040, min: 1600 },\n    items: 3,\n    partialVisibilityGutter: 80,\n  },\n  lg: {\n    breakpoint: { max: 1600, min: 1200 },\n    items: 2,\n    partialVisibilityGutter: 100,\n  },\n  md: {\n    breakpoint: { max: 1200, min: 640 },\n    items: 2,\n    partialVisibilityGutter: 70,\n  },\n  sm: {\n    breakpoint: { max: 640, min: 480 },\n    items: 1,\n    partialVisibilityGutter: 150,\n  },\n  xs: {\n    breakpoint: { max: 480, min: 0 },\n    items: 1,\n    partialVisibilityGutter: 100,\n  },\n}\n\nconst Carousel: React.FC<CarouselProps> = ({\n  items = [],\n  responsive = defaultResponsive,\n  bgColor = 'grey',\n  header,\n}) => {\n  const [state, setState] = React.useState(0)\n  const [swiping, setSwiping] = React.useState(false)\n\n  const carousel = React.useRef<null | _Carousel>(null)\n\n  React.useEffect(() => {\n    if (carousel) {\n    }\n  }, [carousel])\n\n  const onChange = (value: number) => {\n    setState(value)\n  }\n\n  const setNext = () => {\n    if (carousel.current) {\n      carousel.current.next(0)\n    }\n  }\n\n  const setPrev = () => {\n    setState((state === 0 ? 2 : state - 1) % items.length)\n  }\n\n  return (\n    <Section type=\"full\" backgroundColor=\"white\">\n      {header && (\n        <div\n          className={`text-lg-fluid  bg-frida-${bgColor} font-bold px-frida_7% pt-14`}\n        >\n          {header}\n        </div>\n      )}\n      <div className={`bg-frida-${bgColor}  py-3 md:py-12 relative`}>\n        <_Carousel\n          deviceType=\"sm\"\n          ssr\n          beforeChange={(number) => {\n            setSwiping(true)\n            onChange(number)\n          }}\n          afterChange={() => {\n            setSwiping(false)\n          }}\n          partialVisible={true}\n          ref={carousel}\n          infinite={true}\n          customRightArrow={<></>}\n          customLeftArrow={<></>}\n          draggable={true}\n          showDots={false}\n          responsive={responsive}\n          itemClass=\"pb-0 -my-10 md:my-0\"\n        >\n          {items.map((item, index) =>\n            React.cloneElement(item, { key: index, isSwiping: swiping })\n          )}\n        </_Carousel>\n        <CustomArrow onClick={setNext} />\n      </div>\n    </Section>\n  )\n}\n\nexport default Carousel\n\ntype CustomArrowProps = {\n  onClick: () => void\n}\n\nconst CustomArrow: React.FC<CustomArrowProps> = ({ onClick }) => {\n  return (\n    <Icon\n      onClick={onClick}\n      icon=\"arrowRight\"\n      bgColor=\"pink\"\n      className=\"absolute transform -translate-y-1/2  top-1/2 right-2 md:right-5\"\n    />\n  )\n}\n","import * as React from 'react'\n\ntype Item = { name: string; value: string }\ninterface IDropdownProps {\n  label: string | React.ReactElement\n  items: { name: string; value: string }[]\n  onClick: ({}: Item) => void\n}\n\nconst Dropdown: React.FunctionComponent<IDropdownProps> = ({\n  label,\n  items,\n  onClick,\n}) => {\n  return (\n    <div className=\"relative w-72 mb-14  group mx-2\">\n      <div className=\"absolute top-0 left-0 text-frida-white text-sm-fluid  w-full  transition-zIndex delay-300  group-hover:z-10\">\n        <div className=\"bg-frida-black rounded-t-full h-5  transition-all duration-200 w-full\"></div>\n        <div className=\"bg-frida-black max-h-0 h-5 group-hover:max-h-10  transition-all duration-200 w-full\"></div>\n\n        <ul\n          className={` max-h-0  group-hover:max-h-96 text-gray-700  bg-frida-black  transform transition-all  duration-200 ${\n            items.length > 9 ? 'overflow-y-scroll' : 'overflow-hidden'\n          } `}\n        >\n          {items.map((item) => (\n            <li\n              key={item.value}\n              onClick={() => onClick(item)}\n              className=\"text-sm-fluid py-3 px-3 bg-frida-black opacity-0 group-hover:opacity-100 transition-opacity delay-200\"\n            >\n              {item.name}\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"bg-frida-black  group-hover:max-w-full rounded-b-full h-5  transition-all duration-200 w-full\"></div>\n      </div>\n\n      <div className=\"bg-transparent text-frida-white w-full absolute top-0 h-10 flex justify-center items-center transition-zIndex delay-300 group-hover:z-10\">\n        {label}\n      </div>\n    </div>\n  )\n}\n\nexport default Dropdown\n","import Dropdown from './Dropdown'\nimport { useRouter } from 'next/router'\nimport * as React from 'react'\nimport Icon from '@components/Icon'\n\ninterface IFilterProps {\n  filter: {\n    label: string\n    name: string\n    items: { name: string; value: string }[] | undefined\n  }[]\n}\n\nconst Filter: React.FunctionComponent<IFilterProps> = (props) => {\n  const { filter } = props\n  const router = useRouter()\n\n  const slug = (router.query.slug && router.query.slug[0]) || 'noSlug'\n\n  const handleQueries = (type: string, value: string) => {\n    const q = { ...router.query }\n    delete q.slug\n    q[type] = value\n    const queryString = Object.entries(q).reduce((acc, [key, value], index) => {\n      if (value === 'clear') return acc\n      return `${acc}${index === 0 ? '?' : '&'}${key}=${value}`\n    }, '')\n    router.push(`/${slug}${queryString}`, undefined, {\n      shallow: true,\n    })\n  }\n\n  const getLabel = (label: string, name: string) => {\n    const active =\n      router.query[name] && router.query[name] !== 'clear'\n        ? ` : ${router.query[name]}`\n        : ''\n    return (\n      <div\n        className={`w-full h-full  flex  ${\n          active ? 'justify-between' : 'justify-center'\n        } items-center`}\n      >\n        <span className=\"ml-3\">{label + active}</span>\n        {active && (\n          <Icon\n            icon=\"x\"\n            size=\"s\"\n            className=\"mr-1\"\n            onClick={() => {\n              handleQueries(name, 'clear')\n            }}\n          />\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\" flex flex-wrap justify-center md:flex-nowrap md:justify-between items-center w-full px-frida_7% my-20\">\n      {filter.map((_filter) => {\n        if (!_filter.items) return null\n        return (\n          <Dropdown\n            key={_filter.name}\n            label={getLabel(_filter.label, _filter.name)}\n            // items={[{ name: 'no Filter', value: 'clear' }, ..._filter.items]}\n            items={_filter.items}\n            onClick={(e) => {\n              handleQueries(_filter.name, e.value)\n            }}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Filter\n","const fadeAnim = {\n  show: {\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n      delay: 0.1,\n      ease: 'linear',\n      when: 'beforeChildren',\n    },\n  },\n  hide: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n      ease: 'linear',\n      when: 'beforeChildren',\n    },\n  },\n}\n\nconst flipAnim = {\n  show: {\n    y: ['100%', '0%'],\n    transition: {\n      duration: 1,\n      ease: [0.16, 1, 0.3, 1],\n      when: 'beforeChildren',\n    },\n  },\n  hide: {\n    y: '-100%',\n    transition: {\n      duration: 1,\n      ease: [0.16, 1, 0.3, 1],\n      when: 'afterChildren',\n    },\n  },\n}\n\nconst swipeAnim = {\n  show: {\n    opacity: 1,\n    x: ['-1rem', '0rem'],\n    transition: {\n      x: {\n        duration: 0.8,\n        delay: 0.1,\n        ease: [0.16, 1, 0.3, 1],\n      },\n      opacity: {\n        duration: 0.2,\n        delay: 0.1,\n      },\n    },\n  },\n  hide: {\n    x: ['0rem', '1rem'],\n    opacity: 0,\n    transition: {\n      x: {\n        duration: 0.4,\n        ease: [0.16, 1, 0.3, 1],\n      },\n      opacity: {\n        duration: 0.1,\n      },\n    },\n  },\n}\n\nexport { fadeAnim, flipAnim, swipeAnim }\n","import React, { useState, useReducer } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { m, AnimatePresence } from 'framer-motion'\nimport cx from 'classnames'\n\nimport { fadeAnim } from '@lib/animate'\nimport { useRouter } from 'next/router'\n\ntype NewsletterState = {\n  email: string\n  state: 'init' | 'submitting' | 'success' | 'error'\n  verified: boolean\n  isSubmitting: boolean\n  success: boolean\n  errors: { email: boolean }\n  hasError: boolean\n}\n\nconst Newsletter = () => {\n  const { locale } = useRouter()\n\n  const id = 'id'\n  const yourEmail = locale === 'en' ? 'Your E-Mail' : 'Deine E-Mail'\n  const registerNow = locale === 'en' ? 'Register Now!' : 'Jetzt eintragen!'\n  const send = locale === 'en' ? 'Send' : 'Senden'\n\n  const [\n    { isSubmitting, success, email, errors, hasError, verified, state },\n    setState,\n  ] = useState<NewsletterState>({\n    email: '',\n    state: 'init',\n    verified: false,\n    isSubmitting: false,\n    success: false,\n    errors: { email: false },\n    hasError: false,\n  })\n\n  const setEmail = (email: string) => {\n    setState((os) => ({ ...os, email, verified: verifyMail(email) }))\n  }\n\n  // handle form submission\n  // @ts-ignore\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n\n    if (verifyMail(email)) {\n    }\n\n    setState((os) => ({ ...os, email, state: 'submitting' }))\n\n    setTimeout(() => {\n      setState((os) => ({ ...os, email, state: 'error' }))\n    }, 3000)\n\n    setTimeout(() => {\n      setState((os) => ({ ...os, email, state: 'init' }))\n    }, 6000)\n\n    // setSubmitting(true)\n    // setError(false)\n    // fetch('/api/mailchimp/newsletter-join', {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({\n    //     listID: klaviyoListID,\n    //     ...data,\n    //   }),\n    // })\n    //   .then((res) => res.json())\n    //   .then((res) => {\n    //     setSubmitting(false)\n    //     setSuccess(true)\n    //   })\n    //   .catch((error) => {\n    //     setSubmitting(false)\n    //     setError(true)\n    //     console.log(error)\n    //   })\n  }\n\n  return (\n    <form onSubmit={(e) => onSubmit(e)}>\n      <AnimatePresence exitBeforeEnter>\n        {state === 'init' && (\n          <m.div initial=\"hide\" animate=\"show\" exit=\"hide\" variants={fadeAnim}>\n            <input\n              type=\"text\"\n              name=\"fullName\"\n              autoComplete=\"off\"\n              className=\"hidden\"\n              aria-hidden=\"true\"\n            />\n            <div className=\"flex flex-wrap md:flex-nowrap relative\">\n              <div className={`relative text-xs-fluid w-full`}>\n                <label\n                  htmlFor={`email-${id}`}\n                  className={cx(\n                    'absolute  py-3 px-6 text-center md:text-left w-full font-bold text-frida-white',\n                    {\n                      hidden: !!email,\n                    }\n                  )}\n                >\n                  {yourEmail}\n                </label>\n                <input\n                  id={`email-${id}`}\n                  name=\"email\"\n                  type=\"email\"\n                  inputMode=\"email\"\n                  autoComplete=\"email\"\n                  onChange={(e) => {\n                    setEmail(e.target.value)\n                  }}\n                  className={cx(\n                    'w-full',\n                    'form-input px-6 text-xs-fluid',\n                    'rounded-full',\n                    'bg-frida-pink border-0 text-frida-white'\n                  )}\n                />\n\n                {errors.email && (\n                  <span role=\"alert\" className=\"control--error\">\n                    {errors.email}\n                  </span>\n                )}\n              </div>\n\n              <button\n                type=\"submit\"\n                className={cx(\n                  ' md:absolute right-0 bg-frida-black mt-3 w-full text-frida-white text-xs-fluid rounded-full md:w-48 md:mt-0 py-3 font-bold'\n                )}\n                disabled={isSubmitting}\n              >\n                {email && verified ? send : registerNow}\n              </button>\n            </div>\n          </m.div>\n        )}\n\n        {state === 'submitting' && (\n          <m.div\n            key=\"success\"\n            initial=\"hide\"\n            animate=\"show\"\n            exit=\"hide\"\n            variants={fadeAnim}\n          >\n            <div className=\"flex justify-center items-center \">\n              <div className=\"border-frida-pink border-t-3 border-b-3 w-32 rounded-full h-32 animate-spin \"></div>\n            </div>\n          </m.div>\n        )}\n\n        {state === 'success' && (\n          <m.div\n            key=\"success\"\n            initial=\"hide\"\n            animate=\"show\"\n            exit=\"hide\"\n            variants={fadeAnim}\n            className=\"form--success\"\n          >\n            <div>\n              <div className=\"flex justify-center items-center \">\n                <img\n                  width={100}\n                  height={100}\n                  src=\"/Icons_Newsletter_success.png\"\n                />\n              </div>\n              <p className=\"p-8 text-center\">\n                Vielen Dank! Nur noch die E-Mail bestätigen und du bist dabei!\n                (bestätigungs Mail kann bis zu 12h dauern)\n              </p>\n            </div>\n          </m.div>\n        )}\n\n        {state === 'error' && (\n          <m.div\n            key=\"error\"\n            initial=\"hide\"\n            animate=\"show\"\n            exit=\"hide\"\n            variants={fadeAnim}\n            className=\"form--error\"\n          >\n            <div>\n              <div className=\"flex justify-center items-center \">\n                <img\n                  width={100}\n                  height={100}\n                  src=\"/Icons_Newsletter_error.png\"\n                />\n              </div>\n              <div className=\"p-8 text-center\">\n                <p>Hmmmm..., da stimmt was nicht </p>\n                <p>Bist du vielleicht schon im Newsletter ?</p>\n              </div>\n            </div>\n          </m.div>\n        )}\n      </AnimatePresence>\n    </form>\n  )\n}\n\nexport default Newsletter\n\nconst verifyMail = (mail: string) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n  return re.test(String(mail).toLowerCase())\n}\n","import React from 'react'\nimport { FridaColors } from '../types'\n\ntype FridaProps = {\n  text?: string\n  textColor?: FridaColors\n  color?: FridaColors\n}\nconst Frida: React.FC<FridaProps> = ({\n  text = 'Frida',\n  textColor = 'white',\n  color = 'black',\n}) => {\n  return (\n    <span className={`inline whitespace-nowrap text-frida-${color}`}>\n      #Meet\n      <span\n        style={{\n          textDecorationThickness: '0.16em',\n        }}\n        color={color}\n        className={`border-frida-${color} text-frida-${textColor} underline decoration-frida-${color} `}\n      >\n        {text}\n      </span>\n    </span>\n  )\n}\nexport default Frida\n","import React from 'react'\nimport Masonry from 'react-masonry-css'\n\nconst Grid: React.FC = ({ children }) => {\n  return (\n    <Masonry\n      breakpointCols={{\n        default: 3,\n        1160: 2,\n        820: 1,\n      }}\n      columnClassName=\"max-w-md mx-auto\"\n      className=\"flex md:px-frida_7% \"\n      role=\"list\"\n    >\n      {children}\n    </Masonry>\n  )\n}\n\nexport default Grid\n","import React from 'react'\nimport useInfiniteScroll from 'react-infinite-scroll-hook'\nimport { useIntersection } from 'react-use'\nimport { GalleryTypes } from 'types'\nimport Icon from '../Icon'\n\nimport Grid from './grid'\n\ntype GalleryProps = {\n  items: React.ReactNodeArray\n  type?: GalleryTypes\n}\nconst load = 20\n\nconst Gallery: React.FC<GalleryProps> = ({ items, type = 'masonry' }) => {\n  const [page, setPage] = React.useState(1)\n  const hasNextPage = page * load < items.length\n  const gridRef = React.useRef<null | HTMLDivElement>(null)\n  const intersecting = useIntersection(gridRef, {})\n  const showScrollUp = intersecting && intersecting.boundingClientRect.top < 0\n\n  const [sentryRef] = useInfiniteScroll({\n    loading: false,\n    hasNextPage,\n    onLoadMore: () => {\n      setPage(page + 1)\n    },\n    disabled: false,\n    rootMargin: '0px 0px 1000px 0px',\n  })\n\n  if (type === 'grid') {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 md:px-frida_7%\">\n        {items.slice(0, page * load).map((item) => item)}\n        {hasNextPage && <div ref={sentryRef}>Load </div>}\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Icon\n        bgColor=\"pink\"\n        icon=\"arrowLeft\"\n        onClick={() => {\n          if (gridRef.current) {\n            window.scrollTo({\n              top: gridRef.current.offsetTop - 400,\n              behavior: 'smooth',\n            })\n          }\n        }}\n        className={`fixed bottom-3 right-3  md:right-3 transform-gpu rotate-90  ease-in-out duration-500 transition-transform z-10 ${\n          showScrollUp ? 'translate-x-0 ' : 'translate-x-60 '\n        } `}\n      />\n\n      <div ref={gridRef}></div>\n      <Grid>{items.slice(0, page * load).map((item) => item)}</Grid>\n      {hasNextPage && <div ref={sentryRef}>Load </div>}\n    </>\n  )\n}\n\nexport default Gallery\n","import { MailIcon, ShareIcon, ShoppingCartIcon } from '@heroicons/react/outline'\nimport {\n  ArrowNarrowLeftIcon,\n  ArrowNarrowRightIcon,\n  MenuIcon,\n  XIcon,\n} from '@heroicons/react/solid'\n\nimport classNames from 'classnames'\nimport React from 'react'\nimport { FaFacebook, FaTwitter, FaWhatsapp } from 'react-icons/fa'\nimport { GoCreditCard } from 'react-icons/go'\nimport { FridaColors } from 'types'\nimport { mouseLinkProps } from './generic/Mouse/mouseRemote'\n\ninterface IconsObject {\n  [k: string]: any\n}\n\nconst Icons: IconsObject = {\n  facebook: FaFacebook,\n  whatsApp: FaWhatsapp,\n  twitter: FaTwitter,\n  email: MailIcon,\n  share: ShareIcon,\n  creditCard: GoCreditCard,\n  menu: MenuIcon,\n  arrowLeft: ArrowNarrowLeftIcon,\n  arrowRight: ArrowNarrowRightIcon,\n  x: XIcon,\n  cart: ShoppingCartIcon,\n}\n\ntype IconProps = {\n  icon:\n    | 'facebook'\n    | 'whatsApp'\n    | 'twitter'\n    | 'email'\n    | 'share'\n    | 'creditCard'\n    | 'menu'\n    | 'arrowLeft'\n    | 'arrowRight'\n    | 'x'\n    | 'cart'\n\n  size?: 's' | 'm' | 'l'\n  className?: string\n  color?: FridaColors\n  bgColor?: FridaColors\n  onClick?: () => void\n  [k: string]: any\n}\n\nconst Icon: React.FC<IconProps> = ({\n  icon,\n  size = 'm',\n  className,\n  color = 'black',\n  bgColor = 'white',\n  onClick = () => {},\n  ...rest\n}) => {\n  if (!Icons[icon]) return <div>icon</div>\n\n  return React.createElement(Icons[icon], {\n    ...mouseLinkProps,\n    onClick,\n    className: classNames(\n      `rounded-full bg-frida-${bgColor} text-frida-${color}`,\n      {\n        'w-8 h-8 md:w-12 md:h-12 p-1.5': size === 'm',\n      },\n      {\n        'w-8 h-8 p-2 ': size === 's',\n      },\n      className\n    ),\n    key: icon,\n    ...rest,\n  })\n}\n\nexport default Icon\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport { ArtworkRecord } from 'types'\n\ntype ProductNameProps = {\n  availability: boolean\n  name: ArtworkRecord['artworkName']\n  size: 's' | 'm' | 'l'\n  truncate?: boolean\n}\n\nconst ProductName: React.FC<ProductNameProps> = ({\n  availability,\n  name = 'name missing',\n  size = 'm',\n  truncate = false,\n}) => {\n  const stringArray = [...name.split(' ')]\n  const firstWord = stringArray.shift()\n  const rest = stringArray.join(' ')\n\n  return (\n    <div\n      className={classnames(\n        { 'whitespace-nowrap  overflow-hidden truncate': truncate },\n        { 'text-base-fluid font-bold pb-6 pt-2': size === 'l' },\n        { 'text-sm-fluid': size === 'm' }\n      )}\n    >\n      <span>\n        <span\n          className={classnames(\n            ' inline-block rounded-full mr-2 ',\n            { ' w-5 h-5 mb-0.5': size === 'l' },\n            { ' w-4 h-4 -mb-0.5': size === 'm' },\n            {\n              'bg-frida-green': availability,\n            }\n          )}\n        ></span>\n        {firstWord + ' '}\n      </span>\n      {rest}\n    </div>\n  )\n}\n\nexport default ProductName\n","import FridaImage from '@components/fridaImage/FridaImage'\nimport photo from '@components/photo'\nimport cx from 'classnames'\nimport React from 'react'\nimport { FridaColors } from '../types'\nimport { setMouse } from './generic/Mouse/mouseRemote'\n\ntype SectionProps = {\n  type?: 'text' | 'full' | 'hero' | 'normal' | 'medium-wide' | null\n  backgroundColor?: FridaColors\n  className?: string\n  bgImage?: any\n}\n\nconst Section: React.FC<SectionProps> = (props) => {\n  const {\n    children,\n    backgroundColor = 'white',\n    type = 'normal',\n    className = '',\n    bgImage,\n  } = props\n\n  return (\n    <section\n      onMouseOver={() => {\n        backgroundColor === 'red'\n          ? setMouse('color', true)\n          : setMouse('color', false)\n      }}\n      className={cx(\n        'relative',\n        `bg-frida-${backgroundColor}`,\n        {\n          'min-h-screen flex flex-col justify-center': type === 'hero',\n        },\n        className\n      )}\n      data-color={backgroundColor}\n    >\n      {bgImage && (\n        <FridaImage\n          className=\"absolute top-0 bottom-0 left-0 right-0 \"\n          photo={bgImage}\n          layout=\"fill\"\n        />\n      )}\n\n      <div\n        className={cx(\n          'relative',\n          'frida-text-block',\n          'w-full',\n          'mx-auto',\n          {\n            'px-frida_7% ': type === 'normal',\n          },\n          {\n            'max-w-7xl px-5 ': type === 'medium-wide',\n          },\n          {\n            'max-w-5xl px-5': type === 'text',\n          },\n          {\n            'px-frida_7% mt-28': type === 'hero',\n          }\n        )}\n      >\n        {children}\n      </div>\n    </section>\n  )\n}\n\nexport default Section\n","import React from 'react'\nimport { mouseLinkProps } from '../generic/Mouse/mouseRemote'\n\nfunction BigButtons() {\n  return (\n    <div className={`flex flex-wrap md:flex-nowrap`} {...mouseLinkProps}>\n      <BigButton\n        label={'Instagram'}\n        link={'https://www.instagram.com/meetfrida.art/'}\n      ></BigButton>\n      <BigButton\n        label={'Facebook'}\n        link={'https://www.facebook.com/meetfrida.art'}\n      ></BigButton>\n    </div>\n  )\n}\n\ntype BigButtonProps = {\n  label: string\n  link: string\n}\n\nconst BigButton: React.FC<BigButtonProps> = ({ label, link }) => {\n  return (\n    <a\n      className=\"flex justify-center items-center h-14 md:h-36 w-full text-xl-fluid bg-frida-red text-frida-white hover:text-frida-black font-bold text-fill-bigButton hover:bg-frida-pink \"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href={link}\n    >\n      {label}\n    </a>\n  )\n}\n\n// const Root = styled.div`\n//   width: 100%;\n//   max-width: 100vw;\n//   display: flex;\n//   flex-wrap: wrap;\n//   background-color: ${({ theme }) => theme.colors.red};\n//   transition: background-color 0.3s;\n//   @media ${({ theme }) => theme.device.tablet} {\n//     flex-wrap: nowrap;\n//   }\n// `\n// const Button = styled.a`\n//   height: 140px;\n//   width: 100%;\n//   height: 80px;\n//   background-color: ${({ theme }) => theme.colors.red};\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   font-size: 2rem;\n//   color: white;\n//   font-weight: 800;\n//   text-decoration: none;\n//   cursor: none;\n\n//   :hover {\n//     transition: background-color 0.3s;\n//     background-color: ${({ theme }) => theme.colors.pink};\n//     -webkit-text-fill-color: transparent;\n//     -webkit-text-stroke-color: ${({ theme }) => theme.colors.black};\n//     -webkit-text-stroke-width: 0.03em;\n//   }\n//   @media ${({ theme }) => theme.device.laptop} {\n//     font-size: 4rem;\n//     width: 50%;\n//     height: 160px;\n//   }\n// `\nexport default BigButtons\n","import React from 'react'\nimport Link from 'next/link'\nimport { mouseLinkProps } from '../generic/Mouse/mouseRemote'\nimport { FridaColors } from '../../types'\nimport cx from 'classnames'\n\ninterface ButtonProps {\n  label: string\n  color?: FridaColors\n  backgroundColor?: FridaColors\n  testid?: string\n  className?: string\n  size?: 's' | 'm' | 'l'\n  position?: 'inline' | 'left' | 'right' | 'center'\n}\ninterface LinkProps extends ButtonProps {\n  type: 'link' | 'externalLink'\n  link: string\n}\ninterface ClickProps extends ButtonProps {\n  type: 'click'\n  onClick: () => void\n}\n\nconst Button: React.FC<LinkProps | ClickProps> = (props) => {\n  const {\n    label = 'no label',\n    color = 'black',\n    backgroundColor = 'white',\n    className: extraClasses = '',\n    position = 'inline',\n    size = 'm',\n  } = props\n\n  const className = cx(\n    { 'mr-6': position === 'inline' },\n    { 'block mb-2': position === 'left' },\n    { 'block ml-auto mb-2': position === 'right' },\n    { 'block mx-auto mb-2': position === 'center' },\n    { 'px-8 py-3 text-sm-fluid border-4': size === 'm' },\n    { 'px-6 py-2 text-sx-fluid border-3': size === 's' },\n    `text-frida-${color}  hover:text-frida-${backgroundColor} hover:bg-frida-${color}  border-solid border-frida-${color}   rounded-full font-bold `\n  )\n\n  if (props.type === 'link') {\n    return (\n      <Link href={props.link}>\n        <button {...mouseLinkProps} className={`${className} ${extraClasses}`}>\n          {label}\n        </button>\n      </Link>\n    )\n  }\n\n  if (props.type === 'externalLink') {\n    return (\n      <a\n        style={{ cursor: 'none', width: 'fit-content' }}\n        {...mouseLinkProps}\n        className={`${className} ${extraClasses}`}\n        href={props.link}\n      >\n        {label}\n      </a>\n    )\n  }\n\n  if (props.type === 'click') {\n    return (\n      <button\n        style={{ cursor: 'none' }}\n        {...mouseLinkProps}\n        className={` ${className} ${extraClasses}`}\n        onClick={() => {\n          props.onClick()\n        }}\n      >\n        {label}\n      </button>\n    )\n  }\n\n  return <></>\n}\n\nexport default Button\n","import sanityClient, { ClientConfig } from '@sanity/client'\nimport Img from 'next/image'\nimport * as React from 'react'\nimport { useNextSanityImage } from 'next-sanity-image'\n// import { getSanityGatsbyImageData } from './sanityImage'\n// import { getFluidShopifyImage } from './shopifyImage'\nimport Photo from '@components/photo'\nimport { ImageLayout } from 'types'\ninterface IFridaImageProps {\n  type?: 'sanity' | 'shopify' | 'auto'\n  style?: React.CSSProperties\n  imgStyle?: React.CSSProperties\n  sanityAssetId?: string\n  photo: any\n  shopifyImages?: any[]\n  layoutId?: string\n  layout?: ImageLayout\n  width?: number\n  quality?: number\n  className?: string\n  srcSizes?: number[]\n  alt?: string\n}\n\nconst FridaImage: React.FunctionComponent<IFridaImageProps> = (props) => {\n  const {\n    style = {},\n    imgStyle = {},\n    type = 'sanity',\n    sanityAssetId,\n    photo,\n    srcSizes,\n    shopifyImages,\n    layoutId,\n    layout = 'intrinsic',\n    width,\n    quality = 80,\n    className = '',\n    alt,\n  } = props\n\n  if (!photo) return null\n\n  return (\n    <Photo\n      alt={alt}\n      srcSizes={srcSizes}\n      photo={photo}\n      width={width}\n      className={className}\n      layout={layout}\n      quality={quality}\n    />\n  )\n}\n\nexport default FridaImage\n\nexport const ARTWORK_IMAGE_PROPS = {\n  srcSizes: [400, 500],\n  width: 500,\n  quality: 80,\n}\n","const mouseClassNames = {\n  mouseDown: \"mousedown\",\n  mouseOut: \"mouseOut\",\n  linkHover: \"linkHover\",\n  black: \"black\",\n  hide: \"hide\",\n}\n\nexport default mouseClassNames\n","import MouseClassNames from './classNames'\n\nlet mouseNeeded = false\n\nconst throttle = throttled(20, (mouse, e) => {\n  mouse.style.left = e.pageX - 15 + 'px'\n  mouse.style.top = e.pageY - 15 + 'px'\n})\n\nconst setMouse = (\n  type: 'link' | 'color' | 'hide' | 'reset' | 'move',\n  e?: boolean | MouseEvent\n) => {\n  // @ts-ignore\n  let mouse = window.FridaMouse // @ts-ignore\n  !mouse && (mouse = window.FridaMouse)\n  const initMouse = () => {\n    mouseNeeded = true\n    document.querySelector('body')?.classList.add('frida_mouse_active')\n  }\n\n  if (mouse) {\n    switch (type) {\n      case 'move':\n        !mouseNeeded && initMouse()\n        // @ts-ignore\n        throttle(mouse, e)\n\n        break\n      case 'link':\n        e\n          ? mouse.classList.add(MouseClassNames.linkHover)\n          : mouse.classList.remove(MouseClassNames.linkHover)\n\n        break\n      case 'color':\n        e\n          ? mouse.classList.add(MouseClassNames.black)\n          : mouse.classList.remove(MouseClassNames.black)\n        break\n\n      case 'hide':\n        e\n          ? mouse.classList.add(MouseClassNames.hide)\n          : mouse.classList.remove(MouseClassNames.hide)\n        break\n      case 'reset':\n        mouse.classList.remove(MouseClassNames.linkHover)\n        mouse.classList.remove(MouseClassNames.black)\n        mouse.classList.remove(MouseClassNames.hide)\n        break\n\n      default:\n        break\n    }\n  }\n}\n\nconst mouseLinkProps = {\n  onMouseEnter: () => {\n    setMouse('link', true)\n  },\n  onMouseLeave: () => {\n    setMouse('link', false)\n  },\n}\n\nexport { setMouse, mouseLinkProps }\n\nfunction throttled(\n  delay: number,\n  fn: (mouse: HTMLElement, e: MouseEvent) => void\n) {\n  let lastCall = 0\n  return function (mouse: HTMLElement, e: MouseEvent) {\n    const now = new Date().getTime()\n    if (now - lastCall < delay) {\n      return\n    }\n    lastCall = now\n    return fn(mouse, e)\n  }\n}\n","import { useRouter } from 'next/router'\nimport * as React from 'react'\nimport { mouseLinkProps } from './Mouse/mouseRemote'\nimport Link from 'next/link'\ninterface ILangSwitchProps {}\n\nconst LangSwitch: React.FunctionComponent<ILangSwitchProps> = (props) => {\n  const router = useRouter()\n\n  return (\n    <Link\n      href={router.asPath}\n      locale={`${router.locale === 'de' ? 'en' : 'de'}`}\n    >\n      <a\n        {...mouseLinkProps}\n        className=\"w-8 h-8 md:w-12 md:h-12 p-1.5  rounded-full flex justify-center items-center text-xs-fluid font-bold\"\n      >\n        {router.locale === 'de' ? 'EN' : 'DE'}\n      </a>\n    </Link>\n  )\n}\n\nexport default LangSwitch\n","import { useEffect, useRef } from 'react'\n\nconst noScrollClass = 'Frida_no_scroll'\nexport default function useBodyScrollStop() {\n  const bodyRef = useRef<null | HTMLElement>(null)\n  useEffect(() => {\n    bodyRef.current = document.querySelector('html')\n  }, [bodyRef])\n\n  const stopBodyScroll = () => {\n    document.body.style.overflow = 'hidden'\n    bodyRef.current && bodyRef.current.classList.add(noScrollClass)\n  }\n\n  const enableBodyScroll = () => {\n    document.body.style.overflow = ''\n    bodyRef.current && bodyRef.current.classList.remove(noScrollClass)\n  }\n\n  return { stopBodyScroll, enableBodyScroll }\n}\n","import React from 'react'\nimport BigButton from '../../buttons/bigButton'\n\nconst BigButtons: React.FC<{ open: boolean }> = ({ open }) => {\n  return (\n    <div\n      className={`transform-gpu transition-transform  ${\n        open ? 'translate-y-0' : 'translate-y-full'\n      }`}\n      style={{ position: 'fixed', bottom: 0, width: '100%' }}\n    >\n      <BigButton></BigButton>\n    </div>\n  )\n}\n\nexport default BigButtons\n","import React from 'react'\n// import CheckoutLink from \"../../shopComponents/checkoutLink\"\nimport Icon from '../../Icon'\n\nconst Icons: React.FC<{ onClick: () => void }> = ({ onClick }) => {\n  return (\n    <button\n      className=\"pointer-events-auto\"\n      aria-haspopup=\"true\"\n      aria-controls=\"main-menu\"\n      role=\"button\"\n      onClick={onClick}\n    >\n      <Icon icon=\"menu\" />\n      <div className=\"absolute\">{/* <CheckoutLink></CheckoutLink> */}</div>\n    </button>\n  )\n}\n\nexport default Icons\n","import React from 'react'\nimport Link from 'next/link'\nimport { mouseLinkProps } from '../Mouse/mouseRemote'\nimport useBodyScrollStop from '@components/helper/useBodyScrollStop'\nimport { m } from 'framer-motion'\nimport { FridaLocation } from 'types'\nimport { useToggleMegaNav } from '@lib/context'\n\nconst Links: React.FC<{\n  open: boolean\n  items: {\n    internalLink: null | string\n    link: null | string\n    label: null | string\n    label_en: null | string\n  }[]\n  lang: FridaLocation\n}> = ({ open, items, lang }) => {\n  const { enableBodyScroll } = useBodyScrollStop()\n  const toggleNav = useToggleMegaNav()\n\n  const container = {\n    open: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n      },\n    },\n    closed: {\n      opacity: 0,\n      transition: {\n        staggerChildren: 0.1,\n      },\n    },\n  }\n  const item = {\n    open: {\n      opacity: 1,\n      x: 0,\n      transition: { ease: [0.17, 0.67, 0.83, 0.67] },\n    },\n    closed: {\n      opacity: 0,\n      x: '100%',\n      transition: { ease: [0.17, 0.67, 0.83, 0.67] },\n    },\n  }\n\n  return (\n    <nav>\n      <m.ul\n        initial={'closed'}\n        animate={open ? 'open' : 'closed'}\n        variants={container}\n        {...mouseLinkProps}\n        onClick={() => {\n          enableBodyScroll()\n          toggleNav('toggle')\n        }}\n        className=\"relative pt-20 pl-8 md:pl-32\"\n      >\n        {items.map((route, index) => {\n          const label =\n            lang === 'en' && route.label_en ? route.label_en : route.label\n\n          return (\n            <m.li\n              key={index}\n              className={`text-frida-white text-xl-fluid font-bold pb-6 md:pb-8 text-fill-menu `}\n              variants={item}\n            >\n              {route.internalLink ? (\n                <Link href={`/${route.internalLink}`}>{label}</Link>\n              ) : (\n                route.link && <a href={route.link}>{label}</a>\n              )}\n            </m.li>\n          )\n        })}\n      </m.ul>\n    </nav>\n  )\n}\n\nexport default React.memo(Links)\n","import LangSwitch from '@components/generic/LangSwitcher'\nimport { useSiteContext, useToggleCart, useToggleMegaNav } from '@lib/context'\nimport React from 'react'\nimport { FridaLocation } from 'types'\nimport useBodyScrollStop from '../../helper/useBodyScrollStop'\n\nimport { setMouse } from '../Mouse/mouseRemote'\nimport BigButtons from './BigButtons'\nimport Burger from './Burger'\nimport Links from './Links'\nimport Icon from 'components/Icon'\n\ntype NavProps = {\n  items: any[]\n  lang: FridaLocation\n}\n\nconst Nav: React.FC<NavProps> = ({ items, lang }) => {\n  const { stopBodyScroll, enableBodyScroll } = useBodyScrollStop()\n\n  const {\n    meganav: { isOpen },\n  } = useSiteContext()\n\n  const toggleCard = useToggleCart()\n\n  const toggleNav = useToggleMegaNav()\n\n  const handleMenu = () => {\n    toggleNav('toggle')\n\n    if (isOpen) {\n      enableBodyScroll()\n    } else {\n      stopBodyScroll()\n    }\n  }\n\n  return (\n    <div className=\"z-90 \">\n      <div className=\"pointer-events-auto flex bg-frida-grey bg-opacity-50 rounded-full \">\n        <LangSwitch />\n        <Burger\n          onClick={() => {\n            handleMenu()\n          }}\n        ></Burger>\n      </div>\n      <Icon\n        onClick={() => {\n          toggleCard()\n        }}\n        icon=\"cart\"\n        className=\"absolute top-10 right-2 md:top-14 md:right-5 pointer-events-auto\"\n      />\n      <div\n        onMouseEnter={() => {\n          setMouse('color', false)\n        }}\n        className={`fixed z-90 w-screen h-screen top-0 right-0 left-0 bottom-0 bg-transparent `}\n        style={{ pointerEvents: isOpen ? 'auto' : 'none' }}\n        id=\"main-menu\"\n      >\n        <div\n          className={`bg-frida-black  duration-500  absolute w-vh h-vh md:w-vw md:h-vw rounded-full  right-0 transform-gpu  transition-all ${\n            isOpen\n              ? 'scale-150 opacity-100'\n              : 'opacity-0 scale-0 translate-x-1/2 -translate-y-1/2'\n          }`}\n        ></div>\n\n        <Links open={isOpen} items={items} lang={lang} />\n\n        {isOpen && (\n          <Icon\n            icon=\"x\"\n            bgColor=\"black\"\n            color=\"white\"\n            className=\"absolute top-2 mr-2 right-0 md:top-3  md:mr-8 border-frida-white border-3\"\n            onClick={handleMenu}\n          />\n        )}\n        <BigButtons open={isOpen}></BigButtons>\n      </div>\n    </div>\n  )\n}\n\nexport default Nav\n","import React from \"react\"\n\ntype ConditionalWrapperProps = {\n  condition: boolean\n  wrapperTrue: (children: React.ReactElement) => JSX.Element\n  wrapperFalse: (children: React.ReactElement) => JSX.Element\n  children: React.ReactElement\n}\nconst ConditionalWrapper: React.FC<ConditionalWrapperProps> = ({\n  condition,\n  wrapperTrue,\n  wrapperFalse,\n  children,\n}) => (condition ? wrapperTrue(children) : wrapperFalse(children))\n\nexport default ConditionalWrapper\n","import ConditionalWrapper from '@components/helper/ConditionalWraper'\nimport Link from 'next/link'\nimport React, { useEffect, useRef } from 'react'\nimport { FridaColors } from 'types'\nimport Frida from '../../Frida'\nimport { mouseLinkProps, setMouse } from '../Mouse/mouseRemote'\n\ntype PageTitleProps = {\n  title: string\n  color: FridaColors\n  link: boolean\n  initialColor: FridaColors\n}\n\nconst PageTitle: React.FC<PageTitleProps> = ({\n  title,\n  link,\n  initialColor = 'white',\n}) => {\n  const ref = useRef<null | HTMLDivElement>(null)\n  const observers = useRef<IntersectionObserver[]>([])\n  const [bgCurrent, setBgCurrent] = React.useState<string | null>(null)\n  const [counter, setCounter] = React.useState(0)\n\n  useEffect(() => {\n    const observerCallback: IntersectionObserverCallback = (entries) => {\n      if (entries[0].isIntersecting) {\n        setBgCurrent(entries[0].target.getAttribute('data-color'))\n      }\n    }\n    document.querySelectorAll('[data-color]').forEach((i) => {\n      if (i) {\n        const observer = new IntersectionObserver(observerCallback, {\n          root: null,\n          rootMargin: '0px 0px -95% 0px',\n          threshold: 0,\n        })\n        observer.observe(i)\n        observers.current.push(observer)\n      }\n    })\n\n    return () => {\n      observers.current.forEach((observer) => {\n        observer.disconnect()\n      })\n    }\n  }, [counter])\n\n  useEffect(() => {\n    const timeOut = setTimeout(() => {\n      setCounter(counter + 1)\n    }, 2000)\n    return () => {\n      clearTimeout(timeOut)\n    }\n  }, [])\n\n  return (\n    <ConditionalWrapper\n      condition={link}\n      wrapperTrue={(children) => {\n        return (\n          <Link href=\"/\">\n            <div\n              className=\"text-lg-fluid font-bold\"\n              ref={ref}\n              onMouseEnter={() => {\n                setMouse('link', true)\n              }}\n              onMouseLeave={() => {\n                setMouse('link', false)\n              }}\n            >\n              {children}\n            </div>\n          </Link>\n        )\n      }}\n      wrapperFalse={(children) => {\n        return <div className=\"text-lg-fluid font-bold\">{children}</div>\n      }}\n    >\n      <div {...mouseLinkProps} className={'pointer-events-auto'}>\n        <Frida\n          text={title}\n          textColor={bgCurrent ? getColor(bgCurrent).textColor : initialColor}\n          color={bgCurrent ? getColor(bgCurrent).color : 'black'}\n        ></Frida>\n      </div>\n    </ConditionalWrapper>\n  )\n}\n\nconst getColor = (\n  color: string\n): { color: FridaColors; textColor: FridaColors } => {\n  switch (color) {\n    case 'pink':\n      return {\n        color: 'black',\n        textColor: 'white',\n      }\n    case 'white':\n      return {\n        color: 'black',\n        textColor: 'pink',\n      }\n    case 'black':\n      return {\n        color: 'white',\n        textColor: 'pink',\n      }\n    case 'grey':\n      return {\n        color: 'black',\n        textColor: 'pink',\n      }\n    default:\n      return {\n        color: 'black',\n        textColor: 'white',\n      }\n  }\n}\n\nexport default PageTitle\n","import Icon from '@components/Icon'\nimport Link from 'next/link'\nimport React from 'react'\nimport { FridaColors, FridaLocation } from '../../../types'\nimport Nav from '../nav/Nav'\nimport PageTitle from './pageTitle'\n\ntype HeaderProps = {\n  color?: FridaColors\n  title?: string\n  left?: React.ReactNode\n  nav?: boolean\n  initialColor?: FridaColors\n  link?: boolean\n  navItems: any[]\n  lang: FridaLocation\n}\n\nconst Header: React.FC<HeaderProps> = ({\n  title = '',\n  color = 'white',\n  nav = true,\n  initialColor,\n  link = true,\n  children,\n  lang,\n  navItems = [],\n}) => (\n  <header className=\"fixed top-2 md:top-3 w-full px-2 md:px-5 z-10  pointer-events-none\">\n    <div className=\"w-full flex justify-between items-center\">\n      {title && (\n        <PageTitle\n          title={title}\n          color={color}\n          link={link}\n          initialColor={initialColor || 'white'}\n        ></PageTitle>\n      )}\n      {children}\n      {nav && <Nav items={navItems} lang={lang} />}\n    </div>\n  </header>\n)\n\ntype ModalHeaderProps = {\n  color?: FridaColors\n  title?: string\n  left?: React.ReactNode\n  initialColor?: FridaColors\n  link?: boolean\n  lang: FridaLocation\n  backHref: string\n}\n\nconst ModalHeader: React.FC<ModalHeaderProps> = ({\n  title = '',\n  color = 'white',\n  initialColor,\n  link = true,\n  children,\n  lang,\n  backHref = '/',\n}) => (\n  <div className=\"fixed top-2 md:top-3 w-full px-2 md:px-5 z-10 pointer-events-none\">\n    <div className=\"w-full flex justify-between items-center\">\n      {title && (\n        <PageTitle\n          title={title}\n          color={color}\n          link={link}\n          initialColor={initialColor || 'white'}\n        ></PageTitle>\n      )}\n      {children}\n\n      <Link href={backHref} shallow>\n        <a>{backHref}</a>\n        {/* <div>\n          <Icon icon=\"x\" />\n        </div> */}\n      </Link>\n    </div>\n  </div>\n)\n\nexport default Header\n\nexport { ModalHeader }\n","import React from 'react'\nimport Section from '@components/Section'\nimport BigButton from '../../buttons/bigButton'\nimport Newsletter from 'components/Forms/NewsletterForm'\nimport { useRouter } from 'next/router'\nimport { mouseLinkProps } from '../Mouse/mouseRemote'\n\nconst Footer: React.FC = () => {\n  const router = useRouter()\n\n  return (\n    <div>\n      <Section backgroundColor=\"white\">\n        <div className=\"flex flex-wrap lg:flex-nowrap\">\n          <div className=\"w-full py-12 lg:pr-frida_7%\">\n            <p className=\"text-lg-fluid font-bold\">\n              {router.locale === 'en' ? 'Stay up to date' : 'Bleib up to date'}\n            </p>\n            <p className=\"text-base-fluid\">\n              {router.locale === 'en'\n                ? \"Register now for Frida's newsletter and don't miss a thing - exclusive discounts, new items, current projects and much more!\"\n                : 'Jetzt für Fridas Newsletter anmelden und nichts verpassen - exklusive Rabatte, neue Postionen, aktuelle Projekte und vieles mehr!'}\n            </p>\n          </div>\n          <div className=\"w-full my-12 lg:my-auto \">\n            <Newsletter />\n          </div>\n        </div>\n      </Section>\n      <Section backgroundColor=\"red\">\n        <div style={{ padding: '50px 0' }}>\n          <div className={'text-xl-fluid text-frida-white font-bold'}>\n            GET IN TOUCH WITH FRIDA\n          </div>\n        </div>\n      </Section>\n      <BigButton></BigButton>\n      <Section backgroundColor=\"red\">\n        <div className=\"text-frida-white flex flex-col md:flex-row  items-center justify-evenly  md:justify-between h-52 md:h-24\">\n          <a\n            href=\"http://schwan-communications.com/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            {...mouseLinkProps}\n          >\n            <p>© 2020 Schwan Communications</p>\n          </a>\n\n          <a\n            {...mouseLinkProps}\n            onClick={() => {\n              router.push('/impressum')\n            }}\n          >\n            Impressum & Datenschutz\n          </a>\n\n          <a\n            {...mouseLinkProps}\n            onClick={() => {\n              router.push('/agb')\n            }}\n          >\n            AGB\n          </a>\n        </div>\n      </Section>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\n\nimport MouseClassNames from './classNames'\nimport { setMouse } from './mouseRemote'\n\nexport default function mouse() {\n  const setMove = (e: MouseEvent) => {\n    setMouse('move', e)\n  }\n\n  useEffect(() => {\n    const body = document.querySelector('body')\n\n    //@ts-ignore\n    const MouseRef = { current: window.FridaMouse }\n    const setMouseDown = () => {\n      MouseRef.current &&\n        MouseRef.current.classList.add(MouseClassNames.mouseDown)\n    }\n    const setMouseUp = () => {\n      MouseRef.current &&\n        MouseRef.current.classList.remove(MouseClassNames.mouseDown)\n    }\n    const setMouseIn = () => {\n      MouseRef.current &&\n        MouseRef.current.classList.remove(MouseClassNames.mouseOut)\n    }\n    const setMouseOut = () => {\n      MouseRef.current &&\n        MouseRef.current.classList.add(MouseClassNames.mouseOut)\n    }\n\n    body && body.addEventListener('mousemove', setMove)\n    document.addEventListener('mousedown', setMouseDown)\n    document.addEventListener('mouseup', setMouseUp)\n    document.addEventListener('mouseenter', setMouseIn)\n    document.addEventListener('mouseleave', setMouseOut)\n\n    return () => {\n      setMouse('reset')\n      body && body.removeEventListener('mousemove', setMove)\n      document.removeEventListener('mousedown', setMouseDown)\n      document.removeEventListener('mouseup', setMouseUp)\n      document.removeEventListener('mouseenter', setMouseIn)\n      document.removeEventListener('mouseleave', setMouseOut)\n    }\n  }, [])\n\n  return <></>\n}\n","import { ImageUrlBuilder } from 'next-sanity-image'\ntype DefaultSeo = {\n  metaTitle?: null | string\n  metaDesc?: null | string\n  shareDesc?: null | string\n  shareGraphic?: any\n  shareTitle?: null | string\n  siteTitle?: null | string\n}\n\ntype Document = {\n  _type: string\n  [k: string]: any\n}\n\ntype SeoResult = {\n  metaTitle: string\n  metaDesc: string\n  shareTitle: string\n  shareGraphic: { asset: {} }\n  shareDesc: string\n  siteTitle: string\n  url: string\n  shareGraphicSrc: string\n}\n\nconst generateSeo: (\n  defaultSeo: DefaultSeo,\n  document: Document,\n  imageBuilder: ImageUrlBuilder\n) => any = (\n  defaultSeo: DefaultSeo,\n  document: Document,\n  imageBuilder: ImageUrlBuilder\n) => {\n  let metaTitle = defaultSeo.metaTitle\n  let metaDesc = defaultSeo.metaDesc\n  let shareTitle = defaultSeo.shareTitle\n  let shareDesc = defaultSeo.shareDesc\n  let shareGraphic = defaultSeo.shareGraphic\n  let siteTitle = defaultSeo.siteTitle\n  let url = 'https://meetfrida.art/'\n  const docSeo = document.seo\n\n  let shareGraphicSrc = getImageSrc(shareGraphic, imageBuilder)\n  const cShareGraphicSrc = getImageSrc(docSeo?.shareGraphic, imageBuilder)\n\n  if (document._type === 'artwork') {\n    const cDescription = `Kaufen Sie \"${document.artworkName}\" jetzt auf #MeetFrida.art`\n    const cShareTitle = `\"${document.artworkName}\" by \"${document.artistName}\"`\n    const cMetaTitle = `#MeetFrida | Artwork: ${document.artworkName}`\n\n    metaTitle = getDefined([docSeo?.metaTitle, cMetaTitle], metaTitle)\n    metaDesc = getDefined([docSeo?.metaDesc, cDescription], metaDesc)\n    shareTitle = getDefined([docSeo?.shareTitle, cShareTitle], shareTitle)\n    shareDesc = getDefined([docSeo?.shareDesc, cDescription], shareDesc)\n    shareGraphic = getDefined(\n      [document.photo, docSeo?.shareGraphic],\n      shareGraphic\n    )\n    shareGraphicSrc = getDefined(\n      [cShareGraphicSrc, getFittedImageSrc(document.photo, imageBuilder)],\n      shareGraphicSrc\n    )\n    url = `${url}artwork/${document.slug || ''}`\n  }\n\n  if (document._type === 'page') {\n    const cMetaTitle = `#MeetFrida | ${document.title}`\n    metaTitle = getDefined([docSeo?.metaTitle, cMetaTitle], metaTitle)\n    metaDesc = getDefined([docSeo?.metaDesc], metaDesc)\n    shareTitle = getDefined([docSeo?.shareTitle], shareTitle)\n    shareDesc = getDefined([docSeo?.shareDesc], shareDesc)\n    shareGraphic = getDefined([docSeo?.shareGraphic], shareGraphic)\n    shareGraphicSrc = getDefined([cShareGraphicSrc], shareGraphicSrc)\n    url = `${url}${document.slug?.current || ''}`\n  }\n\n  return {\n    metaTitle,\n    metaDesc,\n    shareTitle,\n    shareGraphic,\n    shareDesc,\n    siteTitle,\n    url,\n    shareGraphicSrc,\n  }\n}\n\nexport default generateSeo\n\nconst getFittedImageSrc = (image: any, IB: ImageUrlBuilder) => {\n  return (\n    IB &&\n    image &&\n    image.asset &&\n    IB.image(image.asset)\n      .width(1200)\n      .height(630)\n      .fit('fill')\n      .ignoreImageParams()\n      .bg('f5c5d9')\n      .pad(20)\n      .url()\n  )\n}\n\nconst getImageSrc = (image: any, IB: ImageUrlBuilder) => {\n  return (\n    IB &&\n    image &&\n    image.asset &&\n    IB.image(image.asset).width(1200).height(630).url()\n  )\n}\n\nconst getDefined = (args: any[], alt: any) => {\n  return args.filter((i) => i)[0] || alt\n}\n","import React from 'react'\nimport Head from 'next/head'\nimport { SiteResult } from '@lib/queries/pageQueries'\nimport { imageBuilder } from '@lib/sanity'\nimport generateSchema from '@lib/schema'\nimport generateSeo from '@lib/useSeo'\n\ntype SEOProps = {\n  site: SiteResult\n  page: any\n}\n\nconst SEO: React.FC<SEOProps> = (props) => {\n  const { site, page } = props\n\n  const {\n    metaTitle,\n    metaDesc,\n    shareTitle,\n    shareGraphicSrc,\n    shareDesc,\n    siteTitle,\n    url,\n  } = generateSeo(site.seo, page, imageBuilder)\n\n  return (\n    <>\n      <Head>\n        <meta charSet=\"utf-8\" />\n        <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <meta name=\"format-detection\" content=\"telephone=no\" />\n\n        <link rel=\"icon\" href=\"/icons/favicon.ico\" />\n        <link rel=\"mask-icon\" href=\"/icons/favicon.ico\" color=\"#f5c5d9\" />\n        <meta name=\"theme-color\" content=\"#f5c5d9\" />\n        <link rel=\"apple-touch-icon\" href=\"/icons/apple-touch-icon.png\" />\n\n        <link rel=\"preconnect\" href=\"https://hull-demo.myshopify.com\" />\n        <link rel=\"preconnect\" href=\"https://cdn.sanity.io\" />\n\n        <link rel=\"canonical\" href={url} />\n\n        <title>{metaTitle}</title>\n        {metaDesc && <meta name=\"description\" content={metaDesc} />}\n        {shareTitle && (\n          <>\n            <meta property=\"og:title\" content={shareTitle} />\n            <meta name=\"twitter:title\" content={shareTitle} />\n          </>\n        )}\n        {shareDesc && (\n          <>\n            <meta property=\"og:description\" content={shareDesc} />\n            <meta name=\"twitter:description\" content={shareDesc} />\n          </>\n        )}\n        {shareGraphicSrc && (\n          <>\n            <meta property=\"og:image\" content={shareGraphicSrc} />\n            <meta name=\"twitter:image\" content={shareGraphicSrc} />\n          </>\n        )}\n        <meta property=\"og:url\" content={url} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        {siteTitle && <meta name=\"og:site_name\" content={siteTitle} />}\n        {/* {schema && generateSchema(schema)} */}\n      </Head>\n    </>\n  )\n}\n\nexport default SEO\n","//@ts-nocheck\nimport { SiteResult } from '@lib/queries/pageQueries'\nimport { imageBuilder } from '@lib/sanity'\nimport { m, Variants } from 'framer-motion'\nimport BodyParser from 'pageBuilder/BodyParser'\nimport React from 'react'\nimport { FridaColors, FridaLocation } from 'types'\nimport Footer from '../Footer/footer'\nimport Header from '../header/Header'\nimport Mouse from '../Mouse/mouse'\nimport SEO from '../seo'\n\nconst duration = 0.2\n\nconst variants: Variants = {\n  initial: {\n    opacity: 0,\n  },\n\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: duration,\n      delay: 0.1,\n      ease: 'linear',\n      when: 'beforeChildren',\n    },\n  },\n  exit: {\n    opacity: 0,\n    transition: { duration: duration, ease: 'linear', when: 'beforeChildren' },\n  },\n}\n\ntype LayoutProps = {\n  lang: FridaLocation\n  title: string\n  header?: string | React.ReactElement\n  initialColor?: FridaColors\n  children: React.ReactNode\n  navItems?: any\n  data: { site: SiteResult }\n\n  page?: any\n  schema?: any\n}\n\nconst Layout: React.FC<LayoutProps> = (props) => {\n  const {\n    data = {},\n    schema,\n    children,\n    title,\n    header = 'default',\n    initialColor = 'white',\n    navItems = [],\n  } = props\n\n  const site = data.site\n\n  return (\n    <>\n      <SEO site={data.site} page={data} />\n\n      <m.div\n        key={title}\n        initial={'initial'}\n        animate={'enter'}\n        exit={'exit'}\n        variants={variants}\n        className={'mx-auto '}\n      >\n        {header === 'default' ? (\n          <Header\n            lang={'de'}\n            initial={'initial'}\n            animate={'enter'}\n            exit={'exit'}\n            variants={variants}\n            navItems={navItems}\n            initialColor={initialColor}\n            title={title}\n          />\n        ) : (\n          header\n        )}\n        <main>{children}</main>\n        {/* <CookieConsent /> */}\n        {site.footer && site.footer.content && (\n          <BodyParser lang={props.lang} content={site.footer.content} />\n        )}\n        <Footer></Footer>\n      </m.div>\n      <Mouse />\n    </>\n  )\n}\n\nexport default Layout\n","export const buildInternalLink = (\n  link: { type: string; slug: string } | null | undefined\n) => {\n  if (!link) return '/'\n  const { type, slug } = link\n\n  if (type === 'artwork') {\n    return `/artwork/${slug}`\n  }\n\n  if (type === 'page') {\n    return `/${slug}`\n  }\n\n  return '/'\n}\n","//@ts-nocheck\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useIntersection } from 'use-intersection'\nimport cx from 'classnames'\nimport { buildSrcSet, buildSrc } from '@lib/helpers'\nimport { ImageLayout } from 'types'\n\ninterface PhotoProps {\n  alt?: string\n  width?: number | string\n  height?: number | string\n  photo: any\n  srcSizes?: number[]\n  sizes?: string\n  layout?: ImageLayout\n  hasPlaceholder?: boolean\n  forceLoad?: boolean\n  onLoad?: Function\n  className?: string\n  quality?: number\n}\nconst imageCache = Object.create({})\n\nconst inImageCache = (cacheKey) => {\n  return imageCache[cacheKey] || false\n}\n\nconst activateCacheForImage = (cacheKey) => {\n  if (cacheKey) {\n    imageCache[cacheKey] = true\n  }\n}\n\nconst getImageCacheKey = (props) => {\n  const { photo, onLoad, ...rest } = props\n  return JSON.stringify({ id: photo.id, ...rest })\n}\n\nconst Photo: React.FC<PhotoProps> = (props) => {\n  const {\n    alt,\n    photo,\n    width,\n    height,\n    srcSizes = [400, 800, 1000],\n    sizes = '(min-width: 940px) 50vw, 100vw',\n    layout = 'intrinsic',\n    quality = 80,\n    hasPlaceholder = true,\n    forceLoad,\n    onLoad,\n    className,\n  } = props\n\n  if (!photo) return null\n\n  const imageRef = useRef()\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  // const isLoaded = false\n  const isIntersecting = useIntersection(imageRef, {\n    once: true,\n    rootMargin: '250px',\n    threshold: 0.1,\n  })\n  const cacheKey = React.useCallback(getImageCacheKey(props), [])\n\n  useEffect(() => {\n    // printCache()\n    // inImageCache(cacheKey) && setIsLoaded(true)\n    // setTimeout(() => {\n    //   setIsLoaded(!isLoaded)\n    // }, 2000)\n  }, [])\n\n  // define our aspect ratio if not a background fill\n  const aspect =\n    typeof width === 'number' && typeof height === 'number'\n      ? (height / width) * 100\n      : 100 / (photo.customRatio || photo.aspectRatio)\n\n  const aspectCustom =\n    layout === 'intrinsic' ? { paddingTop: `${aspect}%` } : null\n\n  // define our src and srcset\n\n  const src = buildSrc(photo, { width, height, quality })\n\n  const srcset = buildSrcSet(photo, {\n    srcSizes,\n    ...(width ? { width } : {}),\n    ...(height ? { height } : {}),\n    ...(quality ? { quality } : {}),\n    ...(aspect ? { aspect } : {}),\n  })\n\n  // handle our image onLoad\n  function handleLoad() {\n    activateCacheForImage(cacheKey)\n    requestAnimationFrame(() => {\n      if (!isLoaded) setIsLoaded(true)\n    })\n  }\n\n  const objectPosition =\n    layout === 'fill' && photo.hotspot\n      ? {\n          objectPosition: `${photo.hotspot.x * 100}% ${photo.hotspot.y * 100}%`,\n        }\n      : {}\n\n  // trigger any onLoad callbacks\n  useEffect(() => {\n    if (isLoaded && onLoad) onLoad()\n  }, [isLoaded])\n\n  return (\n    <figure className={className ? className : ''}>\n      <div\n        className={cx('ar', {\n          'has-fill': layout === 'fill' || layout === 'contain',\n        })}\n        style={{ ...aspectCustom }}\n      >\n        <picture>\n          <img\n            draggable=\"false\"\n            ref={imageRef}\n            width={width}\n            height={height}\n            src={forceLoad || isIntersecting ? src : null}\n            srcSet={forceLoad || isIntersecting ? srcset : null}\n            sizes={sizes}\n            decoding=\"async\"\n            onLoad={handleLoad}\n            alt={photo.alt || photo.asset?.altText || alt}\n            className={cx(getSize(layout), { 'is-loaded': isLoaded })}\n            style={{ ...objectPosition }}\n          />\n        </picture>\n\n        {hasPlaceholder && (\n          <div\n            className={cx(\n              `absolute inset-0 ${\n                isLoaded ? 'opacity-0' : 'opacity-100'\n              } transition-opacity duration-1000`,\n              'ar--placeholder '\n            )}\n          >\n            <img\n              src={photo.lqip}\n              alt={photo.alt || photo.asset?.altText || alt}\n              role=\"presentation\"\n            />\n          </div>\n        )}\n      </div>\n    </figure>\n  )\n}\n\nconst getSize = (layout: ImageLayout) => {\n  switch (layout) {\n    case 'intrinsic':\n      return 'object-cover'\n    case 'fill':\n      return 'object-cover'\n    case 'contain':\n      return 'object-contain'\n  }\n}\n\nexport default Photo\n","import React from 'react'\nimport { Marqy } from 'marqy'\n\nconst Banner: React.FC = () => {\n  return (\n    <div className=\"bg-frida-pink\">\n      <Marqy speed={1} direction={false ? 'right' : 'left'} pauseOnHover={true}>\n        {[<div key={'fist'}>Hinz&Kunzt – Straßen-KunztEdition </div>]}\n      </Marqy>\n    </div>\n  )\n}\n\nexport default Banner\n","import Card from '@components/Card'\nimport ProductName from '@components/ProductComponents/ProductName'\nimport { imageMeta, ImageMetaResult } from '@lib/queries/snippets'\nimport React from 'react'\nimport { GalleryTypes } from 'types'\nimport Banner from './banner'\n\nexport const artworkCardQuery = `\n\n    'imageAssetId':image.asset._ref,\n    availability,\n    'artistName':artist->anzeigeName,\n    'slug': slug.current,\n    banner,\n    'price': round(price*1.16),\n    'artworkName':name,\n    'photo': image {\n      ${imageMeta}\n    },\n    'stil':stil->name,\n    'medium':medium->name\n       \n`\nexport type ArtworkCardResult = {\n  imageAssetId: string\n  availability: string\n  artistName: string\n  slug: string\n  banner: string\n  price: number\n  artworkName: string\n  photo: ImageMetaResult\n  stil: string\n  medium: string\n}\n\ninterface ArtworkCardProps extends ArtworkCardResult {\n  type: GalleryTypes\n  isSwiping?: boolean\n}\n\nconst ArtworkCard: React.FC<ArtworkCardProps> = (props) => {\n  const {\n    isSwiping,\n    artworkName,\n    photo,\n    slug,\n    banner,\n    artistName,\n    availability,\n    price,\n    type = 'grid',\n  } = props\n\n  // const artistName = 'QQQQQQQQQQQQQQQQQQQQ'\n\n  if (!photo) return null\n\n  return (\n    <Card\n      isSwiping={isSwiping}\n      slug={slug}\n      type=\"artwork\"\n      galleryType={type}\n      photo={photo}\n      title={artistName}\n      alt={`Artwork ${artworkName} by ${artistName}`}\n    >\n      {banner === 'hinzundkunzt' && <Banner></Banner>}\n\n      <div\n        className={`flex ${\n          type === 'carousel' ? '' : 'flex-wrap'\n        }  text-xl pt-1`}\n      >\n        <ProductName\n          truncate={type === 'carousel'}\n          size={'m'}\n          name={artworkName}\n          availability={availability === 'availabil'}\n        />\n        <div className=\"pl-2 ml-auto text-right\">{price}€</div>\n      </div>\n    </Card>\n  )\n}\n\nexport default ArtworkCard\n","// @ts-nocheck\nimport { getSanityClient } from './sanity'\n\n/*  ------------------------------ */\n/*  Global Site Queries\n/*  ------------------------------ */\n\n// Construct our \"menu items\" GROQ\nconst link = `\n  _key,\n  _type,\n  title,\n  url,\n  \"page\": page->{\"type\": _type, \"slug\": slug.current}\n`\n\n// Construct our \"image meta\" GROQ\nexport const imageMeta = `\n  alt,\n  asset,\n  crop,\n  customRatio,\n  hotspot,\n  \"id\": asset->assetId,\n  \"type\": asset->mimeType,\n  \"aspectRatio\": asset->metadata.dimensions.aspectRatio,\n  \"lqip\": asset->metadata.lqip\n`\n\n// Construct our \"portable text content\" GROQ\nexport const ptContent = `\n  ...,\n  markDefs[]{\n    ...,\n    _type == \"link\" => {\n      \"url\": @.url,\n      \"isButton\": @.isButton,\n      \"styles\": @.styles{style, isLarge, isBlock},\n      \"page\":@.page->{\"type\": _type, \"slug\": slug.current}\n    }\n  },\n  _type == \"figure\" => {\n    ${imageMeta}\n  }\n`\n\n// Construct our \"product\" GROQ\nconst product = `\n  {\n    \"slug\": slug.current,\n    \"id\": productID,\n    title,\n    price,\n    comparePrice,\n    description,\n    \"photos\": {\n      \"main\": galleryPhotos[]{\n        forOption,\n        photos[]{\n          ${imageMeta}\n        }\n      },\n      \"listing\": listingPhotos[]{\n        forOption,\n        \"default\": listingPhoto{\n          ${imageMeta}\n        },\n        \"hover\": listingPhotoHover{\n          ${imageMeta}\n        }\n      },\n    },\n    inStock,\n    lowStock,\n    useGallery,\n    surfaceOption,\n    options[]{\n      name,\n      position,\n      values[]\n    },\n    optionSettings[]{\n      forOption,\n      color\n    },\n    \"variants\": *[_type == \"productVariant\" && productID == ^.productID && wasDeleted != true && isDraft != true]{\n      \"id\": variantID,\n      title,\n      price,\n      comparePrice,\n      inStock,\n      lowStock,\n      options[]{\n        name,\n        position,\n        value\n      },\n      seo\n    },\n    \"klaviyoAccountID\": *[_type == \"generalSettings\"][0].klaviyoAccountID\n  }\n`\n\n// Construct our \"blocks\" GROQ\nexport const blocks = `\n  _type == 'freeform' => {\n    _type,\n    _key,\n    content[]{\n      ${ptContent}\n    },\n    textAlign,\n    maxWidth\n  },\n  _type == 'accordions' => {\n    _type,\n    _key,\n    items[]{\n      \"id\": _key,\n      title,\n      content[]{\n        ${ptContent}\n      }\n    }\n  },\n  _type == 'productCard' => {\n    _type,\n    _key,\n    product->${product}\n  }\n`\n\n// Construct our content \"modules\" GROQ\nexport const modules = `\n  _type == 'grid' => {\n    _type,\n    _key,\n    size,\n    columns[]{\n      sizes[]{\n        breakpoint,\n        width,\n        justify,\n        align,\n        start\n      },\n      blocks[]{\n        ${blocks}\n      }\n    }\n  },\n  _type == 'hero' => {\n    _type,\n    _key,\n    content[]{\n      ${ptContent}\n    },\n    bgType,\n    photos{\n      ...,\n      mobilePhoto{\n        ${imageMeta}\n      },\n      desktopPhoto{\n        ${imageMeta}\n      }\n    },\n    video{\n      id,\n      title\n    }\n  },\n  _type == 'marquee' => {\n    _type,\n    _key,\n    items[]{\n      _type == 'simple' => {\n        _type,\n        text\n      },\n      _type == 'photo' => {\n        _type,\n        \"photo\": {\n          ${imageMeta}\n        }\n      },\n      _type == 'product' => {\n        _type,\n        _id,\n        \"product\": *[_type == \"product\" && _id == ^ ._ref][0]${product}\n      }\n    },\n    speed,\n    reverse,\n    pausable\n  },\n  _type == 'dividerPhoto' => {\n    _type,\n    _key,\n    photo{\n      ${imageMeta}\n    }\n  },\n  _type == 'productHero' => {\n    _type,\n    _key,\n  },\n  _type == 'collectionGrid' => {\n    _type,\n    _key,\n  }\n`\n\n// All Products\nexport const allProducts = (preview) => `\n  *[_type == \"product\" && wasDeleted != true && isDraft != true${\n    preview?.active ? ' && _id in path(\"drafts.**\")' : ''\n  }]${product} | order(title asc)\n`\n\n// Construct our \"site\" GROQ\nconst site = `\n  \"site\": {\n    \"rootDomain\": *[_type == \"generalSettings\"][0].siteURL,\n    \"cart\": *[_type == \"cartSettings\"][0]{\n      storeURL,\n      message\n    },\n    \"productCounts\": [ {\"slug\": \"all\", \"count\": count(*[_type == \"product\"])} ] + *[_type == \"collection\"]{\n      \"slug\": slug.current,\n      \"count\": count(products)\n    },\n    \"cookieConsent\": *[_type == \"cookieSettings\"][0]{\n      message,\n      \"link\": link->{\"type\": _type, \"slug\": slug.current}\n    },\n    \"header\": *[_type == \"headerSettings\"][0]{\n      \"promo\": *[_type == \"promoSettings\"][0]{\n        display,\n        text,\n        \"link\": link->{\"type\": _type, \"slug\": slug.current}\n      },\n      menuDesktopLeft->{\n        items[]{\n          ${link},\n          dropdownItems[]{\n            ${link}\n          },\n          featured[]->${product}\n        }\n      },\n      menuDesktopRight->{\n        items[]{\n          ${link},\n          dropdownItems[]{\n            ${link}\n          },\n          featured[]->${product}\n        }\n      },\n      menuMobilePrimary->{\n        items[]{\n          ${link},\n          dropdownItems[]{\n            ${link}\n          },\n        }\n      },\n      menuMobileSecondary->{\n        items[]{\n          ${link},\n          dropdownItems[]{\n            ${link}\n          },\n        }\n      }\n    },\n    \"footer\": *[_type == \"footerSettings\"][0]{\n      \"blocks\": [\n        {\n          \"title\": blockTitle1,\n          newsletter{\n            \"id\": \"footer\",\n            klaviyoListID,\n            submit,\n            successMsg[]{\n              ${ptContent}\n            },\n            errorMsg[]{\n              ${ptContent}\n            },\n            terms[]{\n              ${ptContent}\n            }\n          }\n        },\n        {\n          \"title\": blockTitle2,\n          \"menu\": blockMenu2->{\n            items[]{\n              ${link}\n            }\n          }\n        },\n        {\n          \"title\": blockTitle3,\n          \"menu\": blockMenu3->{\n            items[]{\n              ${link}\n            }\n          }\n        },\n        {\n          \"title\": blockTitle4,\n          social[]{\n            icon,\n            url\n          }\n        }\n      ]\n    },\n    \"seo\": *[_type == \"seoSettings\"][0]{\n      siteTitle,\n      metaTitle,\n      metaDesc,\n      shareTitle,\n      shareDesc,\n      shareGraphic\n    },\n  }\n`\n\nconst content = ``\n\n/*  ------------------------------ */\n/*  Sanity API Functions\n/*  ------------------------------ */\n\n// Fetch all dynamic docs\nconst getAllDocSlugs: (doc: string) => Promise<null | { slug: string }[]> =\n  async (doc) => {\n    return await getSanityClient().fetch(\n      `*[_type == \"${doc}\"]{ \"slug\": slug.current }`\n    )\n  }\n\nexport { getAllDocSlugs }\n\nconst getAllDocPaths = async (doc: string) => {\n  let allPages = await getAllDocSlugs(doc)\n  if (!allPages) return { paths: [], fallback: true }\n\n  return {\n    paths:\n      allPages.reduce((acc, page) => {\n        if (!page.slug) return [...acc]\n        let slugs = page.slug.split('/').filter((e: string) => e)\n\n        return [\n          ...acc,\n          {\n            params: {\n              slug: slugs,\n            },\n            locale: 'de',\n          },\n          {\n            params: {\n              slug: slugs,\n            },\n            locale: 'en',\n          },\n        ]\n      }, [] as any[]) || [],\n    fallback: false,\n  }\n}\n\nexport { getAllDocPaths }\n\n// Fetch all our page redirects\nexport async function getAllRedirects() {\n  const data = await getSanityClient().fetch(\n    `*[_type == \"redirect\"]{ from, to }`\n  )\n  return data\n}\n\n// Fetch a static page with our global data\nexport async function getStaticPage(pageData, preview) {\n  const query = `\n  {\n    \"page\": ${pageData},\n    ${site}\n  }\n  `\n\n  const data = await getSanityClient(preview).fetch(query)\n\n  return data\n}\n\nexport async function getIndexPage(pageData, preview) {\n  const query = `*[_type == 'indexPage'][0]{\n    ...,\n    content[]{\n      ...,\n      content[]{\n        ...,\n        _type == \"button\" => {\n          internalLink->{\n            _type,\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\n  const data = await getSanityClient(preview).fetch(query)\n\n  return data\n}\n\n// Fetch a specific dynamic page with our global data\n\nconst buttonPlug = ` \n_type == \"button\" => {\n  internalLink->{\n    _type,\n    slug\n  }\n}\n`\n\nconst artworkCarousel = `\n_type == \"artworkCarousel\" => {\n  'items': *[_type == 'artwork'] | order(_updatedAt desc) {\n    'imageAssetId':image.asset._ref,\n    availability,\n    'artistName':artist->anzeigeName,\n    'slug': slug.current,\n    banner,\n    price,\n    'artworkName':name,\n    \n  }[0...15]\n}\n`\nconst artworks = `\n_type == \"artworks\" => {\n  'items': *[_type == 'artwork']{\n    'imageAssetId':image.asset._ref,\n    availability,\n    'artistName':artist->anzeigeName,\n    'slug': slug.current,\n    banner,\n    price,\n    'artworkName':name,\n  }\n}\n`\nexport async function getPage(slug, preview) {\n  const slugs = [`/${slug}`, slug, `/${slug}/`]\n\n  const query = `\n    \n      *[_type == \"page\" && slug.current in ${JSON.stringify(slugs)}][0]{\n        ...,\n        content[]{\n          ...,\n          ${artworkCarousel},\n          ${artworks},\n          content[]{\n            ...,\n            ${buttonPlug}\n          }\n        },\n\n        'site':{\n          'navigation':*[_type == \"navigation\"][0]{\n            'items': item[]{\n            label,\n            label_en,\n            link,\n            'internalLink':internalLink->slug.current\n          }\n          }\n        }\n      }\n    `\n\n  const data = await getSanityClient(preview).fetch(query)\n\n  return data\n}\n\n// Fetch a specific product with our global data\nexport async function getProduct(slug, preview) {\n  const query = `\n    {\n      \"page\": *[_type == \"product\" && slug.current == \"${slug}\" && wasDeleted != true && isDraft != true] | order(_updatedAt desc)[0]{\n        hasTransparentHeader,\n        modules[]{\n          ${modules}\n        },\n        \"product\": ${product},\n        seo\n      },\n      ${site}\n    }\n  `\n\n  const data = await getSanityClient(preview).fetch(query)\n\n  return data\n}\n\n// Fetch a specific collection with our global data\nexport async function getCollection(slug, preview) {\n  const query = `\n    {\n      \"page\": *[_type == \"collection\" && slug.current == \"${slug}\"] | order(_updatedAt desc)[0]{\n        hasTransparentHeader,\n        modules[]{\n          ${modules}\n        },\n        products[wasDeleted != true && isDraft != true${\n          preview?.active ? ' && _id in path(\"drafts.**\")' : ''\n        }]->${product},\n        seo\n      },\n      ${site}\n    }\n  `\n\n  const data = await getSanityClient(preview).fetch(query)\n\n  return data\n}\n\n// SendGrid Post function, used by our API route (so we don't expose our API key)\nexport async function postEmail(apiKey, data) {\n  const {\n    formName = 'Contact Form',\n    fromAddress,\n    notificationEmails,\n    templateID,\n    name,\n    email,\n    subject,\n    message,\n  } = data\n\n  const toAddresses = notificationEmails.map((email) => ({\n    email: email,\n  }))\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      Authorization: `Bearer ${apiKey}`,\n    },\n    data: {\n      personalizations: [\n        {\n          to: toAddresses,\n          subject: subject,\n          dynamic_template_data: {\n            formName: formName,\n            name: name,\n            email: email,\n            subject: subject,\n            message: message,\n          },\n        },\n      ],\n      from: {\n        email: fromAddress,\n      },\n      template_id: templateID,\n    },\n    url: 'https://api.sendgrid.com/v3/mail/send',\n  }\n\n  const post = await axios(options)\n    .then((response) => {\n      console.log('SendGrid Success')\n      return response\n    })\n    .catch((err) => {\n      console.log('SendGrid Failed')\n      return err.response\n    })\n\n  return post\n}\n\nconst bla = /* groq */ `*[_type == \"indexPage\"][0]{\n  ...,\n  content[]{\n    ...,\n    _type == 'button' => {\n    \t...,\n    \tinternalink =>{\n    \t\t'slug': @.reference->slug\n  \t\t}\n\t\t},\ncontent[]{\n    ...,\n    _type == 'button' => {\n    \t...,\n    \tinternalink =>{\n    \t\t'slug': @.reference->slug\n  \t\t}\n\t\t},content[]{\n    ...,\n    _type == 'button' => {\n    \t...,\n    \tinternalink => {\n    \t\t'slug': @.reference->slug\n  \t\t}\n\t\t},\n  }\n  }\n  }\n}`\n","// @ts-ignore\nimport Client from 'shopify-buy'\nimport { isBrowser } from '@lib/helpers'\n\n// First, check that Shopify variables are set\nconst hasShopify = process.env.SHOPIFY_STORE_ID && process.env.SHOPIFY_API_TOKEN\n\n// Warn the client if variables are missing\nif (!hasShopify && isBrowser) {\n  console.warn('Shopify .env variables are missing')\n}\n\n// Otherwise, setup the client and export\nconst options = {\n  domain: `${process.env.SHOPIFY_STORE_ID}.myshopify.com`,\n  storefrontAccessToken: process.env.SHOPIFY_API_TOKEN,\n}\n\nexport default hasShopify ? Client.buildClient(options) : null\n","import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { Base64 } from 'base64-string'\n\n// get our API clients (shopify + sanity)\nimport { getSanityClient } from '@lib/sanity'\nimport shopify from '@lib/shopify'\n\n// get our global image GROQ\nimport { imageMeta } from '@lib/api'\n\n// Set our initial context states\nconst initialContext = {\n  meganav: {\n    isOpen: false,\n    activeID: null,\n  },\n  productCounts: [],\n  shopifyClient: shopify,\n  isLoading: true,\n  isAdding: false,\n  isUpdating: false,\n  isCartOpen: false,\n  checkout: {\n    id: null,\n    lineItems: [],\n  },\n}\n\n// Set context\nconst SiteContext = createContext({\n  context: initialContext,\n  setContext: () => null,\n})\n\n// Build a new checkout\nconst createNewCheckout = (context) => {\n  return context.shopifyClient?.checkout.create()\n}\n\n// Get Shopify checkout cart\nconst fetchCheckout = (context, id) => {\n  return context.shopifyClient?.checkout.fetch(id)\n}\n\n// get associated variant from Sanity\nconst fetchVariant = async (id) => {\n  const variant = await getSanityClient().fetch(\n    `\n      *[_type == \"productVariant\" && variantID == ${id}][0]{\n        \"product\": *[_type == \"product\" && productID == ^.productID][0]{\n          title,\n          \"slug\": slug.current,\n        },\n        \"id\": variantID,\n        title,\n        price,\n        \"photos\": {\n          \"cart\": *[_type == \"product\" && productID == ^.productID][0].cartPhotos[]{\n            forOption,\n            \"default\": cartPhoto{\n              ${imageMeta}\n            },\n          }\n        },\n        options[]{\n          name,\n          position,\n          value\n        }\n      }\n    `\n  )\n\n  return variant\n}\n\n// set Shopify variables\nconst shopifyCheckoutID = 'shopify_checkout_id'\nconst shopifyVariantGID = 'gid://shopify/ProductVariant/'\n\n// set our checkout states\nconst setCheckoutState = async (checkout, setContext, openCart) => {\n  if (!checkout) return null\n\n  if (typeof window !== `undefined`) {\n    localStorage.setItem(shopifyCheckoutID, checkout.id)\n  }\n\n  // get real lineItems data from Sanity\n  const lineItems = await Promise.all(\n    checkout.lineItems.map(async (item) => {\n      const enc = new Base64()\n      const variantID = enc.decode(item.variant.id).split(shopifyVariantGID)[1]\n      const variant = await fetchVariant(variantID)\n\n      return { ...variant, quantity: item.quantity, lineID: item.id }\n    })\n  )\n\n  // update state\n  setContext((prevState) => {\n    return {\n      ...prevState,\n      isAdding: false,\n      isLoading: false,\n      isUpdating: false,\n      isCartOpen: openCart ? true : prevState.isCartOpen,\n      checkout: {\n        id: checkout.id,\n        lineItems: lineItems,\n        subTotal: checkout.lineItemsSubtotalPrice,\n        webUrl: checkout.webUrl,\n      },\n    }\n  })\n}\n\n/*  ------------------------------ */\n/*  Our Context Wrapper\n/*  ------------------------------ */\n\nconst SiteContextProvider = ({ data, children }) => {\n  const { productCounts } = data\n\n  const [context, setContext] = useState({\n    ...initialContext,\n    ...{ productCounts },\n  })\n\n  const [initContext, setInitContext] = useState(false)\n\n  useEffect(() => {\n    // Shopify checkout not build yet\n    if (initContext === false) {\n      const initializeCheckout = async () => {\n        const existingCheckoutID =\n          typeof window !== 'undefined'\n            ? localStorage.getItem(shopifyCheckoutID)\n            : false\n\n        // existing Shopify checkout ID found\n        if (existingCheckoutID) {\n          try {\n            // fetch checkout from Shopify\n            const existingCheckout = await fetchCheckout(\n              context,\n              existingCheckoutID\n            )\n\n            // Check if there are invalid items\n            if (\n              existingCheckout.lineItems.some((lineItem) => !lineItem.variant)\n            ) {\n              throw new Error(\n                'Invalid item in checkout. This variant was probably deleted from Shopify.'\n              )\n            }\n\n            // Make sure this cart hasn’t already been purchased.\n            if (!existingCheckout.completedAt) {\n              setCheckoutState(existingCheckout, setContext)\n              return\n            }\n          } catch (e) {\n            localStorage.setItem(shopifyCheckoutID, null)\n          }\n        }\n\n        // Otherwise, create a new checkout!\n        const newCheckout = await createNewCheckout(context)\n        setCheckoutState(newCheckout, setContext)\n      }\n\n      // Initialize the store context\n      initializeCheckout()\n      setInitContext(true)\n    }\n  }, [initContext, context, setContext, context.shopifyClient?.checkout])\n\n  return (\n    <SiteContext.Provider\n      value={{\n        context,\n        setContext,\n      }}\n    >\n      {children}\n    </SiteContext.Provider>\n  )\n}\n\n// Access our global store states\nfunction useSiteContext() {\n  const { context } = useContext(SiteContext)\n  return context\n}\n\n// Toggle Mega Navigation states\nfunction useToggleMegaNav() {\n  const {\n    context: { meganav },\n    setContext,\n  } = useContext(SiteContext)\n\n  async function toggleMegaNav(state, id = null) {\n    setContext((prevState) => {\n      return {\n        ...prevState,\n        meganav: {\n          isOpen: state === 'toggle' ? !meganav.isOpen : state,\n          activeID: state === 'toggle' && meganav.isOpen ? null : id,\n        },\n      }\n    })\n  }\n  return toggleMegaNav\n}\n\n/*  ------------------------------ */\n/*  Our Shopify context helpers\n/*  ------------------------------ */\n\n// Access our cart item count\nfunction useCartCount() {\n  const {\n    context: { checkout },\n  } = useContext(SiteContext)\n\n  let count = 0\n\n  if (checkout.lineItems) {\n    count = checkout.lineItems.reduce((total, item) => item.quantity + total, 0)\n  }\n\n  return count\n}\n\n// Access our cart totals\nfunction useCartTotals() {\n  const {\n    context: { checkout },\n  } = useContext(SiteContext)\n\n  const subTotal = checkout.subTotal ? checkout.subTotal.amount * 100 : false\n  return {\n    subTotal,\n  }\n}\n\n// Access our cart items\nfunction useCartItems() {\n  const {\n    context: { checkout },\n  } = useContext(SiteContext)\n\n  return checkout.lineItems\n}\n\n// Add an item to the checkout cart\nfunction useAddItem() {\n  const {\n    context: { checkout, shopifyClient },\n    setContext,\n  } = useContext(SiteContext)\n\n  async function addItem(variantID, quantity, attributes) {\n    // Bail if no ID or quantity given\n    if (!variantID || !quantity) return\n\n    // Otherwise, start adding the product\n    setContext((prevState) => {\n      return { ...prevState, isAdding: true, isUpdating: true }\n    })\n\n    // build encoded variantID\n    const enc = new Base64()\n    const variant = enc.urlEncode(`${shopifyVariantGID}${variantID}`)\n\n    // Build the cart line item\n    const newItem = {\n      variantId: variant,\n      quantity: quantity,\n      customAttributes: attributes,\n    }\n\n    // Add it to the Shopify checkout cart\n    const newCheckout = await shopifyClient.checkout.addLineItems(\n      checkout.id,\n      newItem\n    )\n\n    // Update our global store states\n    setCheckoutState(newCheckout, setContext, true)\n  }\n\n  return addItem\n}\n\n// Update item in cart\nfunction useUpdateItem() {\n  const {\n    context: { checkout, shopifyClient },\n    setContext,\n  } = useContext(SiteContext)\n\n  async function updateItem(itemID, quantity) {\n    // Bail if no ID or quantity given\n    if (!itemID || !quantity) return\n\n    // Otherwise, start adding the product\n    setContext((prevState) => {\n      return { ...prevState, isUpdating: true }\n    })\n\n    const newCheckout = await shopifyClient.checkout.updateLineItems(\n      checkout.id,\n      [{ id: itemID, quantity: quantity }]\n    )\n\n    setCheckoutState(newCheckout, setContext)\n  }\n  return updateItem\n}\n\n// Remove item from cart\nfunction useRemoveItem() {\n  const {\n    context: { checkout, shopifyClient },\n    setContext,\n  } = useContext(SiteContext)\n\n  async function removeItem(itemID) {\n    // Bail if no ID given\n    if (!itemID) return\n\n    // Otherwise, start removing the product\n    setContext((prevState) => {\n      return { ...prevState, isUpdating: true }\n    })\n\n    const newCheckout = await shopifyClient.checkout.removeLineItems(\n      checkout.id,\n      [itemID]\n    )\n\n    setCheckoutState(newCheckout, setContext)\n  }\n  return removeItem\n}\n\n// Build our Checkout URL\nfunction useCheckout() {\n  const {\n    context: { checkout },\n  } = useContext(SiteContext)\n\n  return checkout.webUrl\n}\n\n// Toggle cart state\nfunction useToggleCart() {\n  const {\n    context: { isCartOpen },\n    setContext,\n  } = useContext(SiteContext)\n\n  async function toggleCart() {\n    setContext((prevState) => {\n      return { ...prevState, isCartOpen: !isCartOpen }\n    })\n  }\n  return toggleCart\n}\n\n// Reference a collection product count\nfunction useProductCount() {\n  const {\n    context: { productCounts },\n  } = useContext(SiteContext)\n\n  function productCount(collection) {\n    const collectionItem = productCounts.find((c) => c.slug === collection)\n    return collectionItem.count\n  }\n\n  return productCount\n}\n\nexport {\n  SiteContextProvider,\n  useSiteContext,\n  useToggleMegaNav,\n  useCartCount,\n  useCartTotals,\n  useCartItems,\n  useAddItem,\n  useUpdateItem,\n  useRemoveItem,\n  useCheckout,\n  useToggleCart,\n  useProductCount,\n}\n","//@ts-nocheck\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport { imageBuilder } from '@lib/sanity'\nimport {\n  ImageUrlBuilderOptions,\n  SanityImageSource,\n} from '@sanity/image-url/lib/types/types'\nimport { ImageUrlBuilder } from 'next-sanity-image'\n\n/*  ------------------------------ */\n/*  Generic helper functions\n/*  ------------------------------ */\n\n// reference a previous state after update\nexport function usePrevious(value) {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n\n// client-side mount\nexport function useHasMounted() {\n  const [hasMounted, setHasMounted] = useState(false)\n\n  useEffect(() => {\n    setHasMounted(true)\n  }, [])\n\n  return hasMounted\n}\n\n// autoplay looper\nexport function useAutoplay(callback, delay) {\n  const [isRunning, setIsRunning] = useState(false)\n  const stop = useCallback(() => setIsRunning(false), [setIsRunning])\n  const play = useCallback(() => setIsRunning(true), [setIsRunning])\n  const savedCallback = useRef(callback)\n\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  useEffect(() => {\n    if (!isRunning) return\n    let id: 0 | NodeJS.Timeout = 0\n\n    const tick = () => {\n      if (!isRunning && id) return clearTimeout(id)\n      savedCallback.current()\n      requestAnimationFrame(() => (id = setTimeout(tick, delay)))\n    }\n    requestAnimationFrame(() => (id = setTimeout(tick, delay)))\n\n    return () => {\n      if (id) clearTimeout(id)\n      stop()\n    }\n  }, [isRunning, delay, stop])\n\n  return { play, stop }\n}\n\n// conditionally wrap a component with another\nexport const ConditionalWrapper = ({ condition, wrapper, children }) => {\n  return condition ? wrapper(children) : children\n}\n\n// simple debounce function\nexport function debounce(fn, ms) {\n  let timer\n  return (_) => {\n    clearTimeout(timer)\n    timer = setTimeout((_) => {\n      timer = null\n      fn.apply(this, arguments)\n    }, ms)\n  }\n}\n\n// delay with promise\nexport function sleeper(ms) {\n  return function (x) {\n    return new Promise((resolve) => setTimeout(() => resolve(x), ms))\n  }\n}\n\n// check if value is unique\nexport const unique = (value, index, self) => {\n  return self.indexOf(value) === index\n}\n\n// see if an object is found in another array of objects\nexport function hasObject(recs, vals) {\n  if (!recs) return false\n\n  return recs.some(function (obj) {\n    for (var x in obj) if (x in vals && obj[x] != vals[x]) return false\n    return true\n  })\n}\n\n// keep number counters within a range\nexport function clampRange(value, min = 0, max = 1) {\n  return value < min ? min : value > max ? max : value\n}\n\n// wrap incremental\nexport function wrap(index, length) {\n  if (index < 0) {\n    index = length + (index % length)\n  }\n  if (index >= length) {\n    return index % length\n  }\n  return index\n}\n\n// convert cents to dollars, optional trailing zeros if round amount\nexport function centsToPrice(cents, trailing = false) {\n  const price = cents / 100\n\n  if (!trailing && price % 1 === 0) {\n    return `${price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}`\n  } else {\n    const parts = price.toFixed(2).split('.')\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n    return `${parts.join('.')}`\n  }\n}\n\n/*  ------------------------------ */\n/*  Client helpers\n/*  ------------------------------ */\n\nexport const Keys = {\n  ENTER: 13,\n  SPACE: 32,\n  LEFT: 37,\n  RIGHT: 39,\n  UP: 38,\n  DOWN: 40,\n}\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport function useWindowSize() {\n  function getSize() {\n    return {\n      width: isBrowser ? window.innerWidth : 0,\n      height: isBrowser ? window.innerHeight : 0,\n    }\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize)\n\n  useEffect(() => {\n    if (!isBrowser) return\n\n    function handleResize() {\n      setWindowSize(getSize())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize\n}\n\n/*  ------------------------------ */\n/*  Image helpers\n/*  ------------------------------ */\n\nconst buildSrc: (\n  image: SanityImageSource,\n  {}: Pick<ImageUrlBuilderOptions, 'width' | 'height' | 'format' | 'quality'>\n) => string | null = (image, { width, height, format, quality }) => {\n  let imgSrc = imageBuilder.image(image)\n\n  if (width) {\n    imgSrc = imgSrc.width(Math.round(width))\n  }\n\n  if (height) {\n    imgSrc = imgSrc.height(Math.round(height))\n  }\n\n  if (format) {\n    imgSrc = imgSrc.format(format)\n  }\n\n  if (quality) {\n    imgSrc = imgSrc.quality(quality)\n  }\n\n  return imgSrc.fit('max').auto('format').url()\n}\n\nconst buildSrcSet: (\n  image: SanityImageSource,\n  {}: {\n    srcSizes: number[]\n    aspect?: number\n    format?: ImageUrlBuilderOptions['format']\n    quality?: ImageUrlBuilderOptions['quality']\n  }\n) => string = (image, { srcSizes, aspect, format, quality }) => {\n  const sizes = srcSizes.map((width) => {\n    let imgSrc = buildSrc(image, {\n      width,\n      height: aspect && Math.round(width * aspect) / 100,\n      ...{ format },\n      ...{ quality },\n    })\n\n    // if (format) {\n    //   imgSrc = imgSrc.format(format)\n    // }\n\n    return `${imgSrc} ${width}w`\n  })\n\n  return sizes.join(',')\n}\n\nexport { buildSrc, buildSrcSet }\n","import { useRouter } from 'next/router'\nimport React, { createContext } from 'react'\nconst { CONFIG_BUILD_ID } = process.env\nimport useSWR from 'swr'\n//@ts-ignore\nconst fetcher = (...args: any) => fetch(...args).then((res) => res.json())\n\nexport type ModalPageData = {\n  data: null | any\n  type: null | 'artwork' | 'artist' | 'post' | 'product'\n  dir?: 'in' | 'out' | null\n  state: 0 | 1 | 2\n  slug: null | string\n}\ninterface ModalContext {\n  saveScroll: (path: string) => void\n  pushAsModal: (\n    slug: string,\n    type: 'artwork' | 'artist' | 'post' | 'product'\n  ) => void\n  closeModal: () => void\n  open: boolean\n  secondPageData: ModalPageData\n  firstPageData: ModalPageData\n}\n\nconst initialContext: ModalContext = {\n  saveScroll: (path) => {},\n  open: false,\n  pushAsModal: (slug) => {},\n  closeModal: () => {},\n  firstPageData: { data: null, type: null, slug: null, state: 0 },\n  secondPageData: { data: null, type: null, slug: null, state: 0 },\n}\n\nconst ModalContext = createContext<ModalContext>(initialContext)\n\ninterface ModalContextState\n  extends Pick<ModalContext, 'open' | 'secondPageData' | 'firstPageData'> {\n  closeToSlug: null | string\n  state: 0 | 1 | 2 | 3\n  savedScroll: null | number\n  savedPath: null | string\n}\nconst initialContextState: ModalContextState = {\n  firstPageData: initialContext.firstPageData,\n  secondPageData: initialContext.secondPageData,\n  open: initialContext.open,\n  closeToSlug: null,\n  state: 0,\n  savedScroll: null,\n  savedPath: null,\n}\n\nconst ModalContextProvider: React.FC = ({ children }) => {\n  const router = useRouter()\n\n  const [\n    {\n      open,\n      closeToSlug,\n      firstPageData,\n      secondPageData,\n      state,\n      savedScroll,\n      savedPath,\n    },\n    setState,\n  ] = React.useState<ModalContextState>(initialContextState)\n\n  const { data: firstData } = useSWR(\n    !!open && firstPageData.slug\n      ? `/_next/data/${CONFIG_BUILD_ID}/${router.locale}${firstPageData.slug}.json`\n      : null,\n    fetcher\n  )\n\n  React.useEffect(() => {\n    setState((oldState) => ({\n      ...oldState,\n      firstPageData: {\n        ...oldState.firstPageData,\n        data: firstData?.pageProps.data,\n      },\n    }))\n  }, [firstData])\n\n  const { data: secondData } = useSWR(\n    !!open && secondPageData.slug\n      ? `/_next/data/${CONFIG_BUILD_ID}/de${secondPageData.slug}.json`\n      : null,\n    fetcher\n  )\n\n  React.useEffect(() => {\n    setState((oldState) => ({\n      ...oldState,\n      secondPageData: {\n        ...oldState.secondPageData,\n        data: secondData?.pageProps.data,\n      },\n    }))\n  }, [secondData])\n\n  React.useEffect(() => {\n    const handleRouteChange = (\n      url: string,\n      { shallow }: { shallow: boolean }\n    ) => {\n      if (savedScroll && savedPath === url) {\n      }\n    }\n\n    router.events.on('routeChangeComplete', handleRouteChange)\n\n    return () => {\n      router.events.off('routeChangeComplete', handleRouteChange)\n    }\n  }, [router])\n\n  const secondPageIn = (slug: string, type: any) => {\n    setState((oldState) => ({\n      ...oldState,\n      open: true,\n      closeToSlug: open ? closeToSlug : router.asPath,\n      firstPageData: { ...oldState.firstPageData, dir: 'out' },\n      secondPageData: {\n        ...oldState.secondPageData,\n        slug,\n        type,\n        dir: 'in',\n        state: 1,\n      },\n      state: 2,\n    }))\n    setTimeout(() => {\n      setState((oldState) => ({\n        ...oldState,\n        firstPageData: { data: null, slug: null, type: null, state: 0 },\n        secondPageData: { ...oldState.secondPageData, dir: null },\n      }))\n    }, 500)\n  }\n\n  const firstPageIn = (slug: string, type: any) => {\n    setState((oldState) => ({\n      ...oldState,\n      open: true,\n      closeToSlug: open ? closeToSlug : router.asPath,\n      firstPageData: {\n        ...oldState.firstPageData,\n        slug,\n        type,\n        dir: 'in',\n        state: 1,\n      },\n      secondPageData: { ...oldState.secondPageData, dir: 'out' },\n      state: 1,\n    }))\n    setTimeout(() => {\n      setState((oldState) => ({\n        ...oldState,\n        firstPageData: { ...oldState.firstPageData, dir: null },\n        secondPageData: { data: null, slug: null, type: null, state: 0 },\n      }))\n    }, 500)\n  }\n\n  const pushAsModal: ModalContext['pushAsModal'] = async (slug, type) => {\n    if (state === 0 || state === 2) {\n      firstPageIn(slug, type)\n    }\n    if (state === 1) {\n      secondPageIn(slug, type)\n    }\n\n    if (firstPageData.slug && secondPageData.slug) {\n      setState((oldState) => ({\n        ...oldState,\n        slug,\n        open: true,\n        firstPageData: { ...oldState.firstPageData, slug, type, dir: 'in' },\n        secondPageData: { ...oldState.secondPageData, slug, type, dir: 'out' },\n        type,\n      }))\n    }\n\n    setTimeout(() => {\n      router.push(open && closeToSlug ? closeToSlug : router.asPath, slug, {\n        shallow: true,\n      })\n    }, 300)\n\n    //@ts-ignore\n\n    // router.push(slug, slug, { scroll: false })\n  }\n\n  const saveScroll = (path: string) => {\n    setState((oS) => ({ ...oS, savedScroll: window.scrollY, savedPath: path }))\n    //@ts-ignore\n    window.savedScroll = window.scrollY\n    //@ts-ignore\n    window.savedPath = path\n  }\n\n  const closeModal = () => {\n    closeToSlug && router.push(closeToSlug, closeToSlug, { shallow: true })\n\n    setState((oldState) => ({\n      ...oldState,\n      firstPageData: { ...oldState.firstPageData, dir: 'out' },\n      state: 0,\n    }))\n\n    setTimeout(() => {\n      setState(initialContextState)\n    }, 500)\n  }\n\n  return (\n    <ModalContext.Provider\n      value={{\n        open,\n        pushAsModal,\n        closeModal,\n        firstPageData,\n        secondPageData,\n        saveScroll,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  )\n}\n\nconst useModalContext = () => {\n  const context = React.useContext(ModalContext)\n  return context\n}\n\nexport { ModalContextProvider, useModalContext }\n\nexport default ModalContext\n","export const imageMeta = `\n    alt,\n    asset,\n    crop,\n    customRatio,\n    hotspot,\n    \"id\": asset->assetId,\n    \"type\": asset->mimeType,\n    \"aspectRatio\": asset->metadata.dimensions.aspectRatio,\n    \"lqip\": asset->metadata.lqip\n`\n\nexport type ImageMetaResult = {\n  alt: string | null\n  asset: any\n  customRation: number\n  hotspot: any\n  id: string\n  type: string\n  aspectRatio: number\n  lqip: number\n}\n","import createSanityClient from '@sanity/client'\nimport sanityImage from '@sanity/image-url'\nimport { ClientConfig, createPreviewSubscriptionHook } from 'next-sanity'\n\nconst options: ClientConfig = {\n  //@ts-ignore\n  dataset: process.env.SANITY_PROJECT_DATASET,\n  //@ts-ignore\n  projectId: process.env.SANITY_PROJECT_ID,\n  useCdn: process.env.NODE_ENV === 'production',\n  apiVersion: '2021-03-25',\n}\n\nexport const sanityClient = createSanityClient(options)\nexport const imageBuilder = sanityImage(sanityClient)\n\nexport function createPreviewClient(token: string) {\n  return createSanityClient({\n    ...options,\n    useCdn: false,\n    token,\n  })\n}\n\nexport const usePreviewSubscription = createPreviewSubscriptionHook(options)\n\nexport function getSanityClient(preview?: { active: boolean; token: string }) {\n  if (preview?.active) {\n    return createPreviewClient(preview.token)\n  } else {\n    return sanityClient\n  }\n}\n","import Card from '@components/Card'\nimport { imageMeta } from '@lib/api'\nimport { ImageMetaResult } from '@lib/queries/snippets'\nimport React from 'react'\nimport { GalleryTypes } from 'types'\n\nexport const artistCardQuery = `\n    'slug':slug.current,\n    'name':anzeigeName,\n     'photo':*[_type == 'artwork'  && references(^._id) ][0].image {${imageMeta}},\n     'stil':*[_type == 'artwork' && references(^._id)].stil->name\n`\nexport type ArtistCardResult = {\n  name: string\n  slug: string\n  photo: ImageMetaResult\n  stil: string[]\n}\n\ninterface ArtistCardProps extends ArtistCardResult {\n  type: GalleryTypes\n  isSwiping?: boolean\n}\n\nconst ArtistCard: React.FC<ArtistCardProps> = (props) => {\n  const { name, photo, slug, isSwiping, type } = props\n  if (!photo) return null\n\n  return (\n    <Card\n      isSwiping={isSwiping}\n      slug={slug}\n      type=\"artist\"\n      galleryType={type}\n      photo={photo}\n      title={name}\n      layout=\"fill\"\n      alt={`Artist ${name}`}\n    />\n  )\n}\n\nexport default ArtistCard\n","import Gallery from '@components/Gallery/Gallery'\nimport React from 'react'\n\nimport { FridaLocation } from 'types'\nimport Section from '@components/Section'\nimport ArtistCard, { ArtistCardResult } from './ArtistCard'\nimport Filter from '@components/Filter/Filter'\nimport { useRouter } from 'next/router'\n\ntype ArtworksProps = {\n  items?: ArtistCardResult[]\n  lang: FridaLocation\n}\n\nconst ArtistGallery: React.FC<ArtworksProps> = ({ items, lang }) => {\n  if (!items) return null\n  const router = useRouter()\n  let query = router.query\n\n  const stile = items.reduce((acc, item) => {\n    if (!item.stil) return acc\n    const stile = new Set([...acc, ...item.stil])\n    return [...stile]\n  }, [] as string[])\n\n  const filterElements = () => {\n    let res = items.filter((artist) => {\n      let res = true\n\n      if (query.stil && query.stil !== 'clear' && res) {\n        res = artist.stil && artist.stil.includes(query.stil as string)\n      }\n\n      return res\n    })\n    return res\n  }\n\n  return (\n    <>\n      <Filter\n        filter={[\n          {\n            label: 'Stil',\n            name: 'stil',\n            items: stile?.map((s) => ({ name: s, value: s })),\n          },\n        ]}\n      />\n      <Section type={'full'}>\n        <div className=\"py-12\">\n          <Gallery\n            type=\"masonry\"\n            items={[\n              filterElements().map((item) => (\n                <ArtistCard type=\"grid\" {...item} />\n              )),\n            ]}\n          />\n        </div>\n      </Section>\n    </>\n  )\n}\n\nexport default ArtistGallery\n","import React from 'react'\n\nimport ArtistGallery from 'contentTypes/Artist/ArtistGallery'\nimport { FridaLocation } from 'types'\n// import { ArtistsGalleryResult } from '@lib/queries/pageBuilderQueries'\nimport Carousel from '@components/Carousel'\nimport ArtistCard, {\n  artistCardQuery,\n  ArtistCardResult,\n} from 'contentTypes/Artist/ArtistCard'\nimport { PageBuilderBlockBase } from '@lib/queries/pageBuilderQueries'\n\nexport const artistsBlockQuery = `\n_type == \"artists\" => {\n  type,\n  label,\n  label_en,\n  'items': *[_type == 'artist' && slug != null][0...4]{\n    ${artistCardQuery}\n  }\n}\n`\n\nexport interface ArtistsGalleryResult extends PageBuilderBlockBase {\n  _type: 'artists'\n  type: 'carousel' | 'masonry'\n  label?: null | string\n  label_en?: null | string\n  items: ArtistCardResult[]\n}\n\ninterface ArtistsBlockProps extends ArtistsGalleryResult {\n  lang: FridaLocation\n}\n\nconst ArtworksBlock: React.FC<ArtistsBlockProps> = (props) => {\n  const { items = [], lang, type, label, label_en } = props\n\n  const _label = lang === 'en' && label_en ? label_en : label\n\n  if (type === 'masonry') {\n    return <ArtistGallery items={items} lang={lang} />\n  }\n\n  return (\n    <Carousel\n      header={_label}\n      items={items.map((item) => (\n        <ArtistCard type=\"carousel\" {...item} />\n      ))}\n    />\n  )\n}\n\nexport default ArtworksBlock\n","import Filter from '@components/Filter/Filter'\nimport Gallery from '@components/Gallery/Gallery'\nimport { ArtworksGalleryResult } from 'pageBuilder/Blocks/ArtworkBlock'\nimport { useRouter } from 'next/router'\nimport React from 'react'\nimport { FridaLocation } from 'types'\nimport ArtworkCard from './ArtworkCard'\n\ninterface ArtworksProps extends Omit<ArtworksGalleryResult, 'type'> {\n  lang: FridaLocation\n}\n\nconst Artworks: React.FC<ArtworksProps> = (props) => {\n  const { items, lang, stil, medium } = props\n  const router = useRouter()\n\n  const artists = [...new Set(items.map((item) => item.artistName))]\n\n  let query = router.query\n\n  const filterElements = () => {\n    let res = items.filter((artwork) => {\n      let res = true\n      if (query.artist && query.artist !== 'clear') {\n        res = artwork.artistName === query.artist\n      }\n      if (query.stil && query.stil !== 'clear' && res) {\n        res = artwork.stil === query.stil\n      }\n      if (query.medium && query.medium !== 'clear' && res) {\n        res = artwork.medium === query.medium\n      }\n      if (\n        query.price &&\n        typeof query.price === 'string' &&\n        query.price !== 'clear' &&\n        res\n      ) {\n        let range = query.price.split('-')\n\n        res =\n          artwork.price >= parseInt(range[0]) &&\n          artwork.price <= parseInt(range[1])\n      }\n      return res\n    })\n    return res\n  }\n\n  return (\n    <div data-color=\"white\">\n      <Filter\n        filter={[\n          {\n            label: 'Artist',\n            name: 'artist',\n            items: artists?.map((s) => ({ name: s, value: s })),\n          },\n          {\n            label: 'Stil',\n            name: 'stil',\n            items: stil?.map((s) => ({ name: s.name, value: s.name })),\n          },\n          {\n            label: 'Medium',\n            name: 'medium',\n            items: medium?.map((s) => ({ name: s.name, value: s.name })),\n          },\n          {\n            label: 'Price',\n            name: 'price',\n            items: [\n              { name: '50-100', value: '50-100' },\n              { name: '500-1000', value: '500-1000' },\n              { name: '2000-3000', value: '2000-3000' },\n              { name: '3000-5000', value: '3000-5000' },\n            ],\n          },\n        ]}\n      />\n\n      <Gallery\n        items={filterElements().map((data) => (\n          <ArtworkCard key={data.slug} type=\"grid\" {...data} />\n        ))}\n      />\n    </div>\n  )\n}\n\nexport default Artworks\n","import { PageBuilderBlockBase } from '@lib/queries/pageBuilderQueries'\nimport Carousel from '@components/Carousel'\nimport ArtworkCard, {\n  artworkCardQuery,\n  ArtworkCardResult,\n} from 'contentTypes/Artwork/ArtworkCard'\nimport Artworks from 'contentTypes/Artwork/ArtworkGallery'\nimport React from 'react'\nimport { FridaLocation } from 'types'\n\nexport const artworksBlockQuery = `\n_type == \"artworks\" => {\n  type,\n  label,\n  label_en,\n  'items':  *[_type == 'artwork'][0..5]{${artworkCardQuery}},\n  'stil':*[_type=='stil']{name},\n  'medium':*[_type=='medium']{name}\n}\n`\n\nexport interface ArtworksGalleryResult extends PageBuilderBlockBase {\n  _type: 'artworks'\n  type: 'carousel' | 'masonry'\n  label?: null | string\n  label_en?: null | string\n  items: ArtworkCardResult[]\n  stil?: { name: string }[]\n  medium?: { name: string }[]\n  count?: 'all' | number\n}\n\ninterface ArtworksBlockProps extends ArtworksGalleryResult {\n  lang: FridaLocation\n}\n\nconst ArtworksBlock: React.FC<ArtworksBlockProps> = (props) => {\n  const { items = [], lang, type, label, label_en } = props\n\n  const _label = lang === 'en' && label_en ? label_en : label\n\n  if (type === 'masonry') {\n    return <Artworks {...props} lang={lang} />\n  }\n\n  return (\n    <Carousel\n      header={_label}\n      items={items.map((item) => (\n        <ArtworkCard key={item.slug} type=\"carousel\" {...item} />\n      ))}\n    />\n  )\n}\n\nexport default ArtworksBlock\n","import React from 'react'\nimport { mouseLinkProps } from '../generic/Mouse/mouseRemote'\n\ntype HeroNavProps = {\n  current: number\n  setValue: (value: number) => void\n  items: any[]\n}\nconst HeroNav: React.FC<HeroNavProps> = ({ current, setValue, items }) => {\n  return (\n    <div className=\" absolute top-0 h-vh/2 md:h-vh flex items-end  pointer-events-none\">\n      <div className=\"ml-3 md:ml-12 flex items-center mb-5  pointer-events-auto\">\n        {items.map((_, index) => (\n          <NavigationItem\n            key={index}\n            num={index + 1}\n            current={current}\n            setValue={setValue}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default HeroNav\n\ntype HeroNavItemProps = {\n  current: number\n  setValue: (next: number) => void\n  num: number\n}\n\nconst NavigationItem: React.FC<HeroNavItemProps> = ({\n  num,\n  current,\n  setValue,\n}) => {\n  const active = num - 1 === current\n  return (\n    <>\n      <div\n        className=\" text-sm-fluid px-2 font-bold\"\n        {...mouseLinkProps}\n        onClick={() => {\n          setValue(num - 1)\n        }}\n      >\n        {num}\n      </div>\n\n      <div\n        className={`h-1 relative overflow-hidden transform bg-frida-white ${\n          active ? 'w-12' : 'w-0'\n        }`}\n      >\n        <div\n          className={`bg-frida-black w-12 h-1 absolute top-0 left-0 transform duration-5000 ease-linear transition-transform ${\n            active ? 'translate-x-0' : '-translate-x-full'\n          }`}\n        ></div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport Section from '../Section'\n\nimport { CarouselHeroItem } from './CarussellHero'\n\nconst CarouselItem: React.FC<CarouselHeroItem> = (props) => {\n  const { color, image, content } = props\n\n  return (\n    <Section type=\"full\" backgroundColor={color}>\n      <div className=\"w-full relative flex flex-wrap h-screen \">\n        <div className=\"p-10 w-full md:w-1/2 flex  items-center h-vh/2 md:h-screen \">\n          <div>{content}</div>\n        </div>\n        <div className=\" w-full md:w-1/2 flex justify-center items-center  h-vh/2 md:h-screen \">\n          {image}\n        </div>\n      </div>\n    </Section>\n  )\n}\n\nexport default React.memo(CarouselItem)\n","import * as React from 'react'\nimport { mouseLinkProps } from '../generic/Mouse/mouseRemote'\nimport Icon from '../Icon'\n\ntype ButtonNavProps = {\n  setNext: () => void\n  setPrev: () => void\n}\n\nconst ButtonNav: React.FC<ButtonNavProps> = ({ setNext, setPrev }) => {\n  return (\n    <div className=\" h-s h-screen absolute top-0 flex items-end right-0 pointer-events-none\">\n      <div className=\"flex justify-between w-20 md:w-28 mb-3 mr-3 pointer-events-auto\">\n        <Icon {...mouseLinkProps} icon=\"arrowLeft\" onClick={setPrev} />\n        <Icon {...mouseLinkProps} icon=\"arrowRight\" onClick={setNext} />\n      </div>\n    </div>\n  )\n}\n\nexport default ButtonNav\n","import * as React from 'react'\nimport HeroNav from './HeroNav'\nimport CarouselItem from './CarouselItem'\nimport ButtonNav from './ButtonNav'\n\nimport Carousel from 'react-multi-carousel'\nimport 'react-multi-carousel/lib/styles.css'\nimport { FridaColors } from '../../types'\n\nexport type CarouselHeroItem = {\n  color: FridaColors\n  image: React.ReactNode\n  content: React.ReactNode\n}\n\ntype CarouselHeroProps = {\n  items: CarouselHeroItem[]\n}\n\nconst CarouselHero: React.FC<CarouselHeroProps> = ({ items }) => {\n  const [state, setState] = React.useState(0)\n  const carousel = React.useRef<null | Carousel>(null)\n  const hasMultiple = items.length > 1\n\n  const onChange = (value: number) => {\n    setState(value)\n  }\n\n  const setNext = () => {\n    if (carousel.current) {\n      carousel.current.goToSlide((state + 1) % items.length)\n    }\n  }\n\n  const setPrev = () => {\n    if (carousel.current) {\n      carousel.current.goToSlide(state === 0 ? items.length - 1 : state - 1)\n    }\n  }\n\n  const setSlide = (number: number) => {\n    if (carousel.current) {\n      carousel.current.goToSlide(number)\n    }\n  }\n\n  React.useEffect(() => {\n    if (typeof window === `undefined` && hasMultiple) return\n    const interval = setInterval(() => {\n      setNext()\n    }, 5000)\n    return () => {\n      clearInterval(interval)\n    }\n  }, [items.length, state])\n\n  return (\n    <>\n      <Carousel\n        infinite={false}\n        ssr={true}\n        ref={carousel}\n        beforeChange={(number) => {\n          onChange(number)\n        }}\n        responsive={{\n          mobile: {\n            breakpoint: { max: 4000, min: 0 },\n            items: 1,\n          },\n        }}\n        customRightArrow={<></>}\n        customLeftArrow={<></>}\n        draggable={true}\n        showDots={false}\n      >\n        {items.map((item, index) => (\n          <CarouselItem key={index} {...item} />\n        ))}\n      </Carousel>\n\n      {hasMultiple && <ButtonNav setNext={setNext} setPrev={setPrev} />}\n      {hasMultiple && (\n        <HeroNav current={state} setValue={setSlide} items={items} />\n      )}\n    </>\n  )\n}\nexport default CarouselHero\n","import FridaImage from '@components/fridaImage/FridaImage'\nimport CarouselHero from '@components/CarussellHero/CarussellHero'\nimport { PageBuilderBlockBase } from '@lib/queries/pageBuilderQueries'\nimport { imageMeta, ImageMetaResult } from '@lib/queries/snippets'\nimport { richTextQuery } from 'pageBuilder/RichText'\nimport React from 'react'\nimport { FridaColors, FridaLocation } from 'types'\nimport BodyParser from '../BodyParser'\n\nexport const carouselHeroBlockQuery = `\n_type == \"carouselHero\" => {\n  carouselHeroItems[]{\n    ...,\n     ${richTextQuery},\n    'photo': image {\n      ${imageMeta}\n    }\n   }\n}\n`\nexport interface CarouselHeroResult extends PageBuilderBlockBase {\n  carouselHeroItems: {\n    bgColor: FridaColors\n    photo: ImageMetaResult\n    content: null | any\n    content_en: null | any\n  }[]\n}\n\ninterface CarouselHeroBlockProps extends CarouselHeroResult {\n  lang: FridaLocation\n}\nconst CarouselHeroBlock: React.FC<CarouselHeroBlockProps> = (props) => {\n  const { carouselHeroItems, lang } = props\n\n  if (!carouselHeroItems) return <></>\n\n  const items = carouselHeroItems.map((item) => ({\n    color: item.bgColor,\n    content: (\n      <BodyParser\n        lang=\"de\"\n        content={\n          lang === 'en' && item.content_en ? item.content_en : item.content\n        }\n      />\n    ),\n    image: (\n      <FridaImage photo={item.photo} layout=\"fill\" className=\"w-full h-full\" />\n    ),\n  }))\n\n  return <CarouselHero items={items} />\n}\n\nexport default CarouselHeroBlock\n","import React from 'react'\nimport Section from '@components/Section'\nimport Link from 'next/link'\nimport cx from 'classnames'\nimport { ConditionalWrapper } from '@lib/helpers'\nimport { buildInternalLink } from '@components/helper/buildInternalLink'\nimport { mouseLinkProps } from '@components/generic/Mouse/mouseRemote'\n\ntype CategoryItem = {\n  images: React.ReactNode[]\n  label?: string\n  label_en?: string\n  size?: 's' | 'm' | 'l'\n  sizeMobile?: 's' | 'm' | 'l'\n  internalLink?: { slug: string; type: string } | null\n  urlParams?: string\n  path?: string\n}\n\ntype CategoryProps = {\n  items: CategoryItem[]\n}\n\nconst Category: React.FC<CategoryProps> = ({ items }) => {\n  return (\n    <Section type=\"full\" backgroundColor=\"white\">\n      <div className=\"grid gap-6 md:gap-12 grid-cols-12  grid-flow-row p-6 md:p-12\">\n        {items.map((item, index) => {\n          const {\n            size = 'm',\n            sizeMobile = 'm',\n            internalLink,\n            urlParams = '',\n          } = item\n\n          return (\n            <ConditionalWrapper\n              key={index}\n              condition={!!internalLink}\n              wrapper={(children: React.ReactChildren) => {\n                return (\n                  <Link\n                    href={`${buildInternalLink(internalLink)}${urlParams}`}\n                    passHref\n                  >\n                    <a\n                      {...mouseLinkProps}\n                      className={cx(\n                        'h-vw/2 md:h-vw/3 lg:h-vw/5 relative row-span-3 ',\n                        { ' md:col-span-3': size === 's' },\n                        { ' md:col-span-6': size === 'm' },\n                        { ' md:col-span-9 ': size === 'l' },\n                        { 'col-span-3 ': sizeMobile === 's' },\n                        { 'col-span-6': sizeMobile === 'm' },\n                        { 'col-span-12 ': sizeMobile === 'l' }\n                      )}\n                    >\n                      {children}\n                    </a>\n                  </Link>\n                )\n              }}\n            >\n              <div\n                className={cx(\n                  'h-vw/2 md:h-vw/3 lg:h-vw/5 relative row-span-3 ',\n                  { ' md:col-span-3': size === 's' },\n                  { ' md:col-span-6': size === 'm' },\n                  { ' md:col-span-9 ': size === 'l' },\n                  { 'col-span-3 ': sizeMobile === 's' },\n                  { 'col-span-6': sizeMobile === 'm' },\n                  { 'col-span-12 ': sizeMobile === 'l' }\n                )}\n              >\n                {item.images && item.images[0] && item.images[0]}\n\n                {item.label && (\n                  <div className=\"py-2 px-6 rounded-full font-extrabold text-frida-black absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-frida-white whitespace-nowrap\">\n                    {item.label}\n                  </div>\n                )}\n              </div>\n            </ConditionalWrapper>\n          )\n        })}\n      </div>\n    </Section>\n  )\n}\n\nexport default Category\n","import Category from '@components/Category'\nimport Photo from '@components/photo'\nimport { PageBuilderBlockBase } from '@lib/queries/pageBuilderQueries'\nimport { imageMeta, ImageMetaResult } from '@lib/queries/snippets'\nimport React from 'react'\n\nconst categoryItem = `\n...,\nlabel,\nlabel_en,\nsize,\n'internalLink' :internalLink->{\"type\":_type,'slug':slug.current},\nurlParams,\nsizeMobile,\n'images':images[]{${imageMeta}}\n\n`\n\nexport const categoriesBlockQuery = `\n_type == \"categories\" => {\n  type,\n  'items':items[]{${categoryItem}},\n}\n`\ntype CategoryItem = {\n  label?: string\n  label_en?: string\n  size?: 'm' | 's' | 'l'\n  sizeMobile?: 'm' | 's' | 'l'\n  internalLink?: { slug: string; type: string } | null\n  urlParams?: string\n  images?: ImageMetaResult[]\n}\nexport interface CategoryBlockResult extends PageBuilderBlockBase {\n  items: CategoryItem[]\n}\n\nconst CategoryBlock: React.FC<CategoryBlockResult> = (props) => {\n  const { items } = props\n\n  if (!items) return <div></div>\n\n  const _items = props.items.map((item) => ({\n    ...item,\n    images: [\n      ...(item.images\n        ? item.images.map((image) => (\n            <Photo photo={image} layout=\"fill\" className=\"w-full h-full\" />\n          ))\n        : []),\n    ],\n  }))\n\n  return <Category items={_items}></Category>\n}\n\nexport default CategoryBlock\n","import React, { useRef } from 'react'\nimport { useIntersection } from 'use-intersection'\nimport Marq from 'react-fast-marquee'\nimport Photo from '@components/photo'\nimport { FridaColors, FridaLocation } from 'types'\n\ntype TextItem = {\n  _type: 'simple'\n  text: string\n  text_en?: string\n}\ntype imageItem = {\n  _type: 'photo'\n  photo: any\n}\n\ninterface MarqueeProps {\n  data: {\n    items?: (imageItem | TextItem)[]\n    speed?: null | number\n    reverse?: null | boolean\n    pauseable?: null | boolean\n    bgColor?: FridaColors\n    bgColorHover?: FridaColors\n    color?: FridaColors\n    colorHover?: FridaColors\n  }\n  lang: FridaLocation\n}\n\nconst Marquee: React.FC<MarqueeProps> = ({ data = {}, lang }) => {\n  const {\n    items,\n    speed,\n    reverse,\n    pauseable,\n    bgColor = 'white',\n    bgColorHover = 'white',\n    color = 'black',\n    colorHover = 'black',\n  } = data\n\n  if (!items?.length) return null\n\n  const marqueeRef = useRef<HTMLDivElement | null>(null)\n  const isIntersecting = useIntersection(marqueeRef, {\n    once: true,\n    threshold: 0.1,\n  })\n\n  return (\n    <div\n      ref={marqueeRef}\n      className={`bg-frida-${bgColor} transition-colors duration-500 hover:bg-frida-${bgColorHover} text-frida-${color} hover:text-frida-${colorHover}`}\n    >\n      <Marq\n        speed={speed ? speed * 200 : 100}\n        direction={reverse ? 'right' : 'left'}\n        pauseOnHover={pauseable || false}\n        gradient={false}\n        className=\"py-3\"\n      >\n        {[...items, ...items, ...items, ...items].map((item, key) => {\n          switch (item._type) {\n            case 'simple':\n              const { text, text_en } = item\n              return (\n                <div\n                  key={key}\n                  className={`header-small w-fit-content flex items-center`}\n                >\n                  {lang === 'en' && text_en ? text_en : text}\n                </div>\n              )\n            case 'photo':\n              return (\n                <div\n                  key={key}\n                  className=\"relative  w-vw/3 md:w-vw/6  \"\n                  style={{ flex: item.photo.aspectRatio }}\n                >\n                  <Photo\n                    photo={item.photo}\n                    hasPlaceholder={false}\n                    forceLoad={isIntersecting}\n                  />\n                </div>\n              )\n          }\n        })}\n      </Marq>\n    </div>\n  )\n}\n\nexport default Marquee\n","import React from 'react'\nimport Marquee from 'components/marquee'\nimport { imageMeta } from '@lib/queries/snippets'\nimport { FridaColors, FridaLocation } from 'types'\nimport { PageBuilderBlockBase } from '@lib/queries/pageBuilderQueries'\nexport const MarqueeBlockQuery = `\n_type == 'marquee' => {\n    _type,\n    _key,\n    items[]{\n      _type == 'simple' => {\n        _type,\n        text,\n        text_en,\n        \n      },\n      _type == 'photo' => {\n        _type,\n        \"photo\": {\n          ${imageMeta}\n        }\n      },\n    },\n    speed,\n    reverse,\n    pauseable,\n    bgColor,\n    bgColorHover,\n    color,\n    colorHover,\n  },\n`\ntype TextItem = {\n  _type: 'simple'\n  text: string\n  text_en?: string\n}\ntype imageItem = {\n  _type: 'photo'\n  photo: any\n}\n\nexport interface MarqueeBlockQueryResult extends PageBuilderBlockBase {\n  _type: 'marquee'\n  items?: (TextItem | imageItem)[]\n  speed?: number\n  reverse?: null | boolean\n  pauseable?: null | boolean\n  bgColor?: FridaColors\n  bgColorHover?: FridaColors\n  color?: FridaColors\n  colorHover?: FridaColors\n}\n\ninterface MarqueeBlockProps extends MarqueeBlockQueryResult {\n  lang: FridaLocation\n}\n\nconst MarqueeBlock: React.FC<MarqueeBlockProps> = (props) => {\n  return <Marquee data={{ ...props }} lang={props.lang} />\n}\nexport default MarqueeBlock\n","import React from 'react'\nimport Link from 'next/link'\n// import { PostCardResult } from '@lib/queries/snippets'\nimport FridaImage, {\n  ARTWORK_IMAGE_PROPS,\n} from '@components/fridaImage/FridaImage'\nimport { mouseLinkProps } from '@components/generic/Mouse/mouseRemote'\nimport { FridaLocation } from 'types'\nimport { useModalContext } from '@lib/modalContext'\n\nimport { ImageMetaResult, imageMeta } from '@lib/queries/snippets'\n\nexport const postCardQuery = `\n'slug':slug.current,\ntitle,\ntitle_en,\nexcerpt,\nexcerpt_en,\n'createdAt':_createdAt,\n'categories':categories[]->title,\n'categories_en':categories[]->title_en,\n'headerImage': headerImage {${imageMeta}},\n'previewImage':previewImage {${imageMeta}},\n`\nexport type PostCardResult = {\n  slug: string\n  title: string\n  title_en: string | null\n  excerpt: string | null\n  excerpt_en: string | null\n  headerImage: ImageMetaResult\n  previewImage: ImageMetaResult | null\n  categories: null | string[]\n  categories_en: null | string[]\n  createdAt: null | string\n}\n\ninterface PostCardProps extends PostCardResult {\n  lang: FridaLocation\n}\n\nconst PostCard: React.FC<PostCardProps> = (props) => {\n  const {\n    previewImage,\n    slug,\n    title,\n    excerpt,\n    title_en,\n    excerpt_en,\n    lang,\n    categories,\n    categories_en,\n    createdAt,\n  } = props\n\n  if (!previewImage) return null\n\n  const _title = lang === 'en' && title_en ? title_en : title\n  const _excerpt = lang === 'en' && excerpt_en ? excerpt_en : excerpt\n  const _categories =\n    lang === 'en' && categories_en ? categories_en : categories\n  const { pushAsModal } = useModalContext()\n  return (\n    <Link href={`/post/${slug}`} passHref>\n      <a\n        {...mouseLinkProps}\n        className=\"p-2 flex flex-wrap-reverse md:flex-nowrap justify-between  w-full  mb-16\"\n        onClick={(e) => {\n          e.preventDefault()\n\n          pushAsModal(`/post/${slug}`, 'post')\n        }}\n      >\n        <div className=\"w-full md:w-2/3 mt-4 md:mt-0 md:pr-frida_7% flex flex-col justify-between \">\n          <Infos categories={_categories} createdAt={createdAt} />\n          <h2 className=\"header-small\">{_title}</h2>\n        </div>\n\n        <FridaImage\n          className=\" w-full md:w-96 h-80 mx-auto\"\n          photo={previewImage}\n          {...ARTWORK_IMAGE_PROPS}\n          layout=\"fill\"\n        />\n      </a>\n    </Link>\n  )\n}\n\nexport default PostCard\n\nconst Infos: React.FC<{\n  categories: string[] | null\n  createdAt: string | null\n}> = ({ categories, createdAt }) => {\n  if (!categories) return <></>\n  return (\n    <div className=\"mb-8 flex items-center\">\n      {categories.map((cat) => (\n        <div className=\"text-sm-fluid inline-block border-2 px-8 py-1 rounded-full mr-3\">\n          {cat}\n        </div>\n      ))}\n      <div className=\"text-sm-fluid\">{formatDate(createdAt)}</div>\n    </div>\n  )\n}\n\nconst formatDate = (date: null | string) => {\n  if (!date) return ''\n  const _date = new Date(date)\n  const f = new Intl.DateTimeFormat('en')\n  let d = f.format(_date).split('/')\n\n  return `${d[1]} / ${d[0]} / ${d[2]}`\n}\n","import React from 'react'\n\nimport { FridaLocation } from 'types'\nimport Section from '../../components/Section'\nimport PostCard, { PostCardResult } from './PostCard'\n\ntype PostGalleryProps = {\n  items: PostCardResult[]\n  lang: FridaLocation\n}\n\nconst PostGallery: React.FC<PostGalleryProps> = (props) => {\n  const { items, lang } = props\n\n  return (\n    <div>\n      <Section type=\"full\">\n        <div className=\"pt-16 md:px-frida_7%\">\n          {[\n            items.map((item) => (\n              <PostCard key={item.slug} lang={lang} {...item} />\n            )),\n          ]}\n        </div>\n      </Section>\n    </div>\n  )\n}\n\nexport default PostGallery\n","import React from 'react'\n\nimport PostGallery from 'contentTypes/Post/PostGallery'\nimport { FridaLocation } from 'types'\nimport { postCardQuery, PostCardResult } from 'contentTypes/Post/PostCard'\nimport { PageBuilderBlockBase } from '@lib/queries/pageBuilderQueries'\n\nexport const postsBlockQuery = `\n_type == \"posts\" => {\n  'items': *[_type == 'post']{\n    ${postCardQuery}\n  }\n}\n`\nexport interface PostsGalleryResult extends PageBuilderBlockBase {\n  items: PostCardResult[]\n}\n\ntype PostsBlockProps = {\n  items: PostCardResult[]\n  lang: FridaLocation\n}\n\nconst PostsBlock: React.FC<PostsBlockProps> = (props) => {\n  const { items = [], lang } = props\n\n  return <PostGallery items={items} lang={lang} />\n}\n\nexport default PostsBlock\n","import Card from '@components/Card'\nimport ProductName from '@components/ProductComponents/ProductName'\nimport { imageMeta, ImageMetaResult } from '@lib/queries/snippets'\nimport React from 'react'\nimport { GalleryTypes } from 'types'\n\nexport const productCardQuery = `\n'slug':slug.current,\ntitle,\ntitle_en,\nlistingPhotos[]{\n  listingPhoto {${imageMeta}}\n},\ndescription,\nprice\n`\nexport type ProductCardResult = {\n  slug: string\n  title: string | null\n  title_en: string | null\n  excerpt: string | null\n  excerpt_en: string | null\n  listingPhotos: { listingPhoto: ImageMetaResult }[]\n  price: number\n}\n\ninterface ProductCardProps extends ProductCardResult {\n  type: GalleryTypes\n  isSwiping?: boolean\n}\n\nconst ProductCard: React.FC<ProductCardProps> = (props) => {\n  const { listingPhotos, slug, isSwiping, type, title, price } = props\n\n  const photo = listingPhotos[0] ? listingPhotos[0].listingPhoto : null\n\n  return (\n    <Card\n      isSwiping={isSwiping}\n      slug={slug}\n      type=\"product\"\n      galleryType={type}\n      photo={photo}\n      title=\"Shop\"\n    >\n      <div className=\"flex flex-wrap text-xl pt-5\">\n        <ProductName size={'m'} name={title || '---'} availability={true} />\n        <div className=\"pl-2 ml-auto text-right\">{price}€</div>\n      </div>\n    </Card>\n  )\n}\n\nexport default ProductCard\n","import Gallery from '@components/Gallery/Gallery'\n\nimport React from 'react'\n\nimport { FridaLocation } from 'types'\nimport Section from '@components/Section'\nimport ProductCard, { ProductCardResult } from './ProductCard'\n\ntype ProductGalleryProps = {\n  items?: ProductCardResult[]\n  lang: FridaLocation\n}\n\nconst ProductGallery: React.FC<ProductGalleryProps> = ({ items, lang }) => {\n  if (!items) return null\n  return (\n    <>\n      <div id={'filter'} style={{ transform: 'translateY(-10vh)' }}></div>\n      <Section type={'full'}>\n        <Gallery\n          type=\"grid\"\n          items={[\n            items.map((item) => (\n              <ProductCard key={item.slug} type=\"grid\" {...item} />\n            )),\n          ]}\n        />\n      </Section>\n    </>\n  )\n}\n\nexport default ProductGallery\n","import { PageBuilderBlockBase } from '@lib/queries/pageBuilderQueries'\nimport Carousel from '@components/Carousel'\nimport ProductCard, {\n  productCardQuery,\n  ProductCardResult,\n} from 'contentTypes/Product/ProductCard'\nimport ProductGallery from 'contentTypes/Product/ProductGallery'\nimport React from 'react'\nimport { FridaLocation } from 'types'\n\nexport const productsBlockQuery = `\n_type == \"products\" => {\n  type,\n  'items': *[_type == 'product']{\n    ${productCardQuery}\n  }\n}\n`\nexport interface ProductsGalleryResult extends PageBuilderBlockBase {\n  type: 'carousel' | 'masonry'\n  items: ProductCardResult[]\n}\n\ninterface ProductsBlockProps extends ProductsGalleryResult {\n  lang: FridaLocation\n}\n\nconst ProductsBlock: React.FC<ProductsBlockProps> = (props) => {\n  const { items = [], lang, type } = props\n\n  if (type === 'masonry') {\n    return <ProductGallery items={items} lang={lang} />\n  }\n\n  return (\n    <Carousel\n      items={items.map((item) => (\n        <ProductCard type=\"carousel\" {...item} />\n      ))}\n    />\n  )\n}\n\nexport default ProductsBlock\n","import React from 'react'\nimport Section from '../../components/Section'\n\nimport BodyParser from '../BodyParser'\nimport { PageBuilderBlockBase } from '@lib/queries/pageBuilderQueries'\nimport { imageMeta } from '@lib/api'\nimport { richTextQuery } from 'pageBuilder/RichText'\nimport { ImageMetaResult } from '@lib/queries/snippets'\nimport { FridaColors, FridaLocation, FridaSizes } from 'types'\nimport classNames from 'classnames'\n\nexport const sectionBlockQuery = `\n_type == \"section\" => {\n  title,\n  bgColor,\n  type,\n  topSpace,\n  bottomSpace,\n  ${richTextQuery},\n  'photo': bgImage {\n    ${imageMeta}\n  }\n}\n`\n\nexport interface SectionResult extends PageBuilderBlockBase {\n  _type: 'section'\n  title: null | string\n  bgColor: null | FridaColors\n  type: null | 'text' | 'hero'\n  topSpace: null | FridaSizes\n  bottomSpace: null | FridaSizes\n  content: null | any\n  content_en: null | any\n  photo: null | ImageMetaResult\n}\n\ninterface SectionBlockProps extends SectionResult {\n  lang: FridaLocation\n}\n\nconst SectionBlock: React.FC<SectionBlockProps> = (props) => {\n  const {\n    type,\n    bgColor,\n    content,\n    bottomSpace,\n    topSpace,\n    lang,\n    content_en,\n    photo,\n  } = props\n\n  const _content = lang === 'en' && content_en ? content_en : content\n\n  return (\n    <Section\n      className={classNames(\n        { 'pt-10': topSpace === 's' },\n        { 'pt-20': topSpace === 'm' },\n        { 'pt-32': topSpace === 'l' },\n        { 'pt-44': topSpace === 'xl' },\n        { 'pt-60': topSpace === 'xxl' },\n        { 'pb-10': bottomSpace === 's' },\n        { 'pb-20': bottomSpace === 'm' },\n        { 'pb-32': bottomSpace === 'l' },\n        { 'pb-44': bottomSpace === 'xl' },\n        { 'pb-60': bottomSpace === 'xxl' },\n        { 'pb-0.5': !bottomSpace }\n      )}\n      type={type}\n      backgroundColor={bgColor || 'white'}\n      bgImage={photo}\n    >\n      {content && <BodyParser lang={lang} content={_content} />}\n    </Section>\n  )\n}\n\nexport default SectionBlock\n","import React from \"react\"\ntype ComponentNotFoundProps = {\n  type: string\n}\nconst ComponentNotFound: React.FC<ComponentNotFoundProps> = props => (\n  <div>Component {props.type} is not defined. Add it to components.js</div>\n)\n\nexport default ComponentNotFound\n","// import dynamic from 'next/dynamic'\n\n// const ArtistBlock = dynamic(() => import('./Blocks/ArtistsBlock'))\n// const Section = dynamic(() => import('./Blocks/SectionBlock'))\n\nimport ArtistBlock from './Blocks/ArtistsBlock'\nimport ArtworksBlock from './Blocks/ArtworkBlock'\nimport PostBlock from './Blocks/PostsBlock'\nimport ProductsBlock from './Blocks/ProductsBlock'\nimport CarouselHeroBlock from './Blocks/CarouselHeroBlock'\nimport CategoryBlock from './Blocks/CategoryBlock'\nimport Section from './Blocks/SectionBlock'\nimport RT from './RichText'\nimport Marquee from './Blocks/Marquee'\n\nimport ButtonPlug from './Plugs/ButtonPlug'\nimport EmbedPlug from './Plugs/EmbedPlug'\nimport ImagePlug from './Plugs/ImagePlug'\n\nimport ComponentNotFound from './component_not_found'\n// import Supporter from \"./Supporter\"\n\nconst ComponentList: { [T: string]: any } = {\n  marquee: Marquee,\n  embed: EmbedPlug,\n  products: ProductsBlock,\n  categories: CategoryBlock,\n  artworks: ArtworksBlock,\n  section: Section,\n  button: ButtonPlug,\n  richText: RT,\n  block: RT,\n  artists: ArtistBlock,\n  posts: PostBlock,\n  carouselHero: CarouselHeroBlock,\n  imagePlug: ImagePlug,\n}\n\nconst Components = (type?: string | undefined) => {\n  if (!type || typeof ComponentList[type] === 'undefined') {\n    return ComponentNotFound\n  }\n  return ComponentList[type]\n}\n\nexport default Components\n","import React from 'react'\nimport Components from './Components'\n\ntype ContentParserProps = {\n  content: { _type: string; _key: string }[]\n  lang: string\n}\nconst ContentParser: React.FC<ContentParserProps> = (props) => {\n  const { content, lang } = props\n\n  return (\n    <>\n      {content &&\n        content.map((blok) =>\n          React.createElement(Components(blok._type), {\n            ...blok,\n            lang,\n            key: blok._key,\n          })\n        )}\n    </>\n  )\n}\n\nexport default ContentParser\n","import React from 'react'\nimport Button from '@components/buttons/button'\n\nimport { FridaColors } from 'types'\nimport { buildInternalLink } from '@components/helper/buildInternalLink'\n\nexport const buttonPlugQuery = ` \n_type == \"button\" => {\n    label,\n    bgColor,\n    color,\n    inline,\n    link,\n    'internalLink' :internalLink->{\"type\":_type,'slug':slug.current}\n}\n`\n\nexport type ButtonPlugResult = {\n  label: string | null\n  label_en: string | null\n  internalLink: { slug: string; type: string } | null\n  link: string | null\n  color: FridaColors | null\n  bgColor: FridaColors | null\n  position?: 'inline' | 'left' | 'right' | 'center'\n}\n\ninterface ButtonPlugProps extends ButtonPlugResult {}\nconst ButtonPlug: React.FC<ButtonPlugProps> = (props) => {\n  const { internalLink, link, color, bgColor, label, position } = props\n\n  const _link = !!internalLink\n    ? buildInternalLink(internalLink)\n    : !!link\n    ? link\n    : '/'\n  const _type = !!internalLink ? 'link' : !!link ? 'externalLink' : 'link'\n\n  return (\n    <Button\n      color={color || 'black'}\n      backgroundColor={bgColor || 'white'}\n      type={_type}\n      link={_link}\n      label={label || 'label'}\n      position={position || 'inline'}\n    />\n  )\n}\n\nexport default ButtonPlug\n","import * as React from 'react'\nimport { setMouse } from './generic/Mouse/mouseRemote'\ninterface IEmbetProps {\n  url?: string\n}\n\nconst Embed: React.FC<IEmbetProps> = ({ url }) => {\n  if (!url) return <div>Url is not set</div>\n\n  return (\n    <div\n      onMouseEnter={() => {\n        setMouse('hide', true)\n      }}\n      onMouseLeave={() => {\n        setMouse('hide', false)\n      }}\n    >\n      <div className=\"aspect-w-16 aspect-h-9\">\n        <iframe\n          src={url}\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen={true}\n        ></iframe>\n      </div>\n    </div>\n  )\n}\n\nexport default Embed\n","import React from 'react'\nimport Embed from '@components/Embed'\n\nexport const embedPlugQuery = ` \n_type == \"embed\" => {\n   url\n}\n`\n\nexport type EmbedPlugResult = {\n  _type: 'embed'\n  url?: null | string\n}\n\nconst EmbedPlug: React.FC<EmbedPlugResult> = ({ url }) => {\n  if (!url) return <div>url is missing</div>\n  return <Embed url={url} />\n}\n\nexport default EmbedPlug\n","import React from 'react'\nimport Image from 'next/image'\nimport { imageMeta, ImageMetaResult } from '@lib/queries/snippets'\nimport FridaImage from '@components/fridaImage/FridaImage'\nimport Photo from '@components/photo'\nimport classNames from 'classnames'\nimport { FridaSizes } from 'types'\nimport { imageBuilder } from '@lib/sanity'\nimport FPhoto from '@components/fPoto'\nexport const imagePlugQuery = ` \n_type == \"imagePlug\" => {\n  ...,\n  'cass':asset->,\n   ${imageMeta},\n   customWidth,\n   customHeight,\n}\n`\n\nexport interface ImagePlugResult extends ImageMetaResult {\n  customWidth?: FridaSizes | null\n  customHeight?: FridaSizes | null\n}\n\nconst ImagePlug: React.FC<ImagePlugResult> = (props) => {\n  const { customWidth, customHeight, ...rest } = props\n\n  const s = imageBuilder.image(rest).width(sizeToWidth(customWidth)).url()\n  if (!s) return <div></div>\n  return (\n    <div\n      className={classNames(\n        { 'w-full mx-auto': !customWidth },\n        { 'mx-auto md:full': !!customWidth },\n        { 'w-full md:w-1/6 ': customWidth === 's' },\n        { 'w-full md:w-1/4 ': customWidth === 'm' },\n        { 'w-full md:w-1/2 ': customWidth === 'l' },\n        { 'w-full md:w-3/4 ': customWidth === 'xl' },\n        { 'w-full md:w-2/3 ': customWidth === 'xxl' },\n        { 'h-vh/5': customHeight === 's' },\n        { 'h-vh/4': customHeight === 'm' },\n        { 'h-vh/3': customHeight === 'l' },\n        { 'h-vh/2': customHeight === 'xl' },\n        { 'h-vh': customHeight === 'xxl' }\n      )}\n    >\n      <img\n        src={s}\n        className={classNames('w-full', {\n          'object-cover w-full h-full': !!customWidth && !!customHeight,\n        })}\n      />\n    </div>\n  )\n}\n\nconst sizeToWidth = (width: FridaSizes | null | undefined) => {\n  if (!width) return 1000\n\n  const sizes = {\n    s: 300,\n    m: 600,\n    l: 800,\n    xl: 1200,\n    xxl: 1400,\n  }\n  return sizes[width] | 1000\n}\nexport default ImagePlug\n","import React from 'react'\n// @ts-ignore\nimport BlockContent from '@sanity/block-content-to-react'\nimport Frida from '../components/Frida'\nimport EmbedPlug, { embedPlugQuery } from './Plugs/EmbedPlug'\nimport ButtonPlug, { buttonPlugQuery } from './Plugs/ButtonPlug'\nimport { imagePlugQuery } from './Plugs/ImagePlug'\nimport { PageBuilderBlockBase } from '@lib/queries/pageBuilderQueries'\n\nexport const richTextQuery = `\ncontent[]{\n  ...,\n  ${buttonPlugQuery},\n  ${embedPlugQuery},\n  ${imagePlugQuery}\n}\n`\n\nexport interface RichTextQueryResult extends PageBuilderBlockBase {\n  _type: 'richText'\n  content: any[]\n}\n\nconst pink = (props: any) => {\n  return <span className=\"text-frida-pink\">{props.children}</span>\n}\nconst white = (props: any) => {\n  return <span className=\"text-frida-white\">{props.children}</span>\n}\nconst frida = (props: any) => {\n  return <Frida textColor={props.mark.color} text={props.children} />\n}\n\nconst classes: { [k: string]: string } = {\n  'custom-header-big': 'header-big',\n  'custom-header-medium': 'header-medium',\n  'custom-header-small': 'header-small',\n  'custom-subHeader': 'subheader',\n  normal: 'text-normal',\n  'custom-small': 'text-small',\n  'custom-xsmall': 'text-xsmall',\n}\n\nconst BlockRenderer = (props: any) => {\n  const { style = 'normal' } = props.node\n\n  if (/^custom/.test(style) || style === 'normal') {\n    return React.createElement(\n      'p',\n      { className: `${classes[style]}` },\n      props.children\n    )\n  }\n\n  if (style === 'blockquote') {\n    return <blockquote>- {props.children}</blockquote>\n  }\n\n  return BlockContent.defaultSerializers.types.block(props)\n}\n\nconst serializer = {\n  types: {\n    button: ButtonPlug,\n    embed: EmbedPlug,\n    block: BlockRenderer,\n  },\n  marks: {\n    pink,\n    white,\n    frida,\n  },\n}\n\nconst RichText = (props: any) => {\n  const isBlock = props._type === 'block'\n  return (\n    <BlockContent\n      blocks={isBlock ? props : props.content}\n      serializers={serializer}\n    />\n  )\n}\n\nexport default RichText\n"],"sourceRoot":""}